Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    RETURN
    TRUE
    NONE
    FOR
    SQUARED
    ELSE
    AND
    FALSE
    NOT
    OR

Grammar

Rule 0     S' -> statement
Rule 1     statement -> PRINT expression
Rule 2     statement -> PRINT QUOTATION ID QUOTATION
Rule 3     statement -> IF expression
Rule 4     statement -> ID RECEIVE expression
Rule 5     statement -> ID RECEIVE QUOTATION ID QUOTATION NEWLINE
Rule 6     statement -> expression
Rule 7     statement -> LPAREN expression RPAREN
Rule 8     expression -> expression LT expression
Rule 9     expression -> expression LE expression
Rule 10    expression -> expression GT expression
Rule 11    expression -> expression GE expression
Rule 12    expression -> expression PLUS expression
Rule 13    expression -> expression MINUS expression
Rule 14    expression -> expression TIMES expression
Rule 15    expression -> expression DIVIDE expression
Rule 16    expression -> - expression
Rule 17    expression -> ( expression )
Rule 18    expression -> FLOAT
Rule 19    expression -> INTEGER
Rule 20    expression -> ID

Terminals, with rules where they appear

(                    : 17
)                    : 17
-                    : 16
AND                  : 
DIVIDE               : 15
ELSE                 : 
FALSE                : 
FLOAT                : 18
FOR                  : 
GE                   : 11
GT                   : 10
ID                   : 2 4 5 5 20
IF                   : 3
INTEGER              : 19
LE                   : 9
LPAREN               : 7
LT                   : 8
MINUS                : 13
NEWLINE              : 5
NONE                 : 
NOT                  : 
OR                   : 
PLUS                 : 12
PRINT                : 1 2
QUOTATION            : 2 2 5 5
RECEIVE              : 4 5
RETURN               : 
RPAREN               : 7
SQUARED              : 
TIMES                : 14
TRUE                 : 
error                : 

Nonterminals, with rules where they appear

expression           : 1 3 4 6 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 17
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . PRINT expression
    (2) statement -> . PRINT QUOTATION ID QUOTATION
    (3) statement -> . IF expression
    (4) statement -> . ID RECEIVE expression
    (5) statement -> . ID RECEIVE QUOTATION ID QUOTATION NEWLINE
    (6) statement -> . expression
    (7) statement -> . LPAREN expression RPAREN
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    PRINT           shift and go to state 1
    IF              shift and go to state 8
    ID              shift and go to state 7
    LPAREN          shift and go to state 6
    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5

    expression                     shift and go to state 10
    statement                      shift and go to state 4

state 1

    (1) statement -> PRINT . expression
    (2) statement -> PRINT . QUOTATION ID QUOTATION
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    QUOTATION       shift and go to state 13
    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 11

state 2

    (17) expression -> ( . expression )
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 14

state 3

    (16) expression -> - . expression
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 15

state 4

    (0) S' -> statement .



state 5

    (19) expression -> INTEGER .

    LT              reduce using rule 19 (expression -> INTEGER .)
    LE              reduce using rule 19 (expression -> INTEGER .)
    GT              reduce using rule 19 (expression -> INTEGER .)
    GE              reduce using rule 19 (expression -> INTEGER .)
    PLUS            reduce using rule 19 (expression -> INTEGER .)
    MINUS           reduce using rule 19 (expression -> INTEGER .)
    TIMES           reduce using rule 19 (expression -> INTEGER .)
    DIVIDE          reduce using rule 19 (expression -> INTEGER .)
    $end            reduce using rule 19 (expression -> INTEGER .)
    )               reduce using rule 19 (expression -> INTEGER .)
    RPAREN          reduce using rule 19 (expression -> INTEGER .)


state 6

    (7) statement -> LPAREN . expression RPAREN
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 16

state 7

    (4) statement -> ID . RECEIVE expression
    (5) statement -> ID . RECEIVE QUOTATION ID QUOTATION NEWLINE
    (20) expression -> ID .

    RECEIVE         shift and go to state 17
    LT              reduce using rule 20 (expression -> ID .)
    LE              reduce using rule 20 (expression -> ID .)
    GT              reduce using rule 20 (expression -> ID .)
    GE              reduce using rule 20 (expression -> ID .)
    PLUS            reduce using rule 20 (expression -> ID .)
    MINUS           reduce using rule 20 (expression -> ID .)
    TIMES           reduce using rule 20 (expression -> ID .)
    DIVIDE          reduce using rule 20 (expression -> ID .)
    $end            reduce using rule 20 (expression -> ID .)


state 8

    (3) statement -> IF . expression
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 18

state 9

    (18) expression -> FLOAT .

    LT              reduce using rule 18 (expression -> FLOAT .)
    LE              reduce using rule 18 (expression -> FLOAT .)
    GT              reduce using rule 18 (expression -> FLOAT .)
    GE              reduce using rule 18 (expression -> FLOAT .)
    PLUS            reduce using rule 18 (expression -> FLOAT .)
    MINUS           reduce using rule 18 (expression -> FLOAT .)
    TIMES           reduce using rule 18 (expression -> FLOAT .)
    DIVIDE          reduce using rule 18 (expression -> FLOAT .)
    $end            reduce using rule 18 (expression -> FLOAT .)
    )               reduce using rule 18 (expression -> FLOAT .)
    RPAREN          reduce using rule 18 (expression -> FLOAT .)


state 10

    (6) statement -> expression .
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    $end            reduce using rule 6 (statement -> expression .)
    LT              shift and go to state 23
    LE              shift and go to state 19
    GT              shift and go to state 24
    GE              shift and go to state 21
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 20


state 11

    (1) statement -> PRINT expression .
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    $end            reduce using rule 1 (statement -> PRINT expression .)
    LT              shift and go to state 23
    LE              shift and go to state 19
    GT              shift and go to state 24
    GE              shift and go to state 21
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 20


state 12

    (20) expression -> ID .

    LT              reduce using rule 20 (expression -> ID .)
    LE              reduce using rule 20 (expression -> ID .)
    GT              reduce using rule 20 (expression -> ID .)
    GE              reduce using rule 20 (expression -> ID .)
    PLUS            reduce using rule 20 (expression -> ID .)
    MINUS           reduce using rule 20 (expression -> ID .)
    TIMES           reduce using rule 20 (expression -> ID .)
    DIVIDE          reduce using rule 20 (expression -> ID .)
    $end            reduce using rule 20 (expression -> ID .)
    )               reduce using rule 20 (expression -> ID .)
    RPAREN          reduce using rule 20 (expression -> ID .)


state 13

    (2) statement -> PRINT QUOTATION . ID QUOTATION

    ID              shift and go to state 27


state 14

    (17) expression -> ( expression . )
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    )               shift and go to state 28
    LT              shift and go to state 23
    LE              shift and go to state 19
    GT              shift and go to state 24
    GE              shift and go to state 21
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 20


state 15

    (16) expression -> - expression .
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    LT              reduce using rule 16 (expression -> - expression .)
    LE              reduce using rule 16 (expression -> - expression .)
    GT              reduce using rule 16 (expression -> - expression .)
    GE              reduce using rule 16 (expression -> - expression .)
    PLUS            reduce using rule 16 (expression -> - expression .)
    MINUS           reduce using rule 16 (expression -> - expression .)
    TIMES           reduce using rule 16 (expression -> - expression .)
    DIVIDE          reduce using rule 16 (expression -> - expression .)
    $end            reduce using rule 16 (expression -> - expression .)
    )               reduce using rule 16 (expression -> - expression .)
    RPAREN          reduce using rule 16 (expression -> - expression .)

  ! LT              [ shift and go to state 23 ]
  ! LE              [ shift and go to state 19 ]
  ! GT              [ shift and go to state 24 ]
  ! GE              [ shift and go to state 21 ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! TIMES           [ shift and go to state 22 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 16

    (7) statement -> LPAREN expression . RPAREN
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 29
    LT              shift and go to state 23
    LE              shift and go to state 19
    GT              shift and go to state 24
    GE              shift and go to state 21
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 20


state 17

    (4) statement -> ID RECEIVE . expression
    (5) statement -> ID RECEIVE . QUOTATION ID QUOTATION NEWLINE
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    QUOTATION       shift and go to state 31
    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 30

state 18

    (3) statement -> IF expression .
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    $end            reduce using rule 3 (statement -> IF expression .)
    LT              shift and go to state 23
    LE              shift and go to state 19
    GT              shift and go to state 24
    GE              shift and go to state 21
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 20


state 19

    (9) expression -> expression LE . expression
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 32

state 20

    (15) expression -> expression DIVIDE . expression
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 33

state 21

    (11) expression -> expression GE . expression
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 34

state 22

    (14) expression -> expression TIMES . expression
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 35

state 23

    (8) expression -> expression LT . expression
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 36

state 24

    (10) expression -> expression GT . expression
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 37

state 25

    (12) expression -> expression PLUS . expression
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 38

state 26

    (13) expression -> expression MINUS . expression
    (8) expression -> . expression LT expression
    (9) expression -> . expression LE expression
    (10) expression -> . expression GT expression
    (11) expression -> . expression GE expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . FLOAT
    (19) expression -> . INTEGER
    (20) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 9
    INTEGER         shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 39

state 27

    (2) statement -> PRINT QUOTATION ID . QUOTATION

    QUOTATION       shift and go to state 40


state 28

    (17) expression -> ( expression ) .

    LT              reduce using rule 17 (expression -> ( expression ) .)
    LE              reduce using rule 17 (expression -> ( expression ) .)
    GT              reduce using rule 17 (expression -> ( expression ) .)
    GE              reduce using rule 17 (expression -> ( expression ) .)
    PLUS            reduce using rule 17 (expression -> ( expression ) .)
    MINUS           reduce using rule 17 (expression -> ( expression ) .)
    TIMES           reduce using rule 17 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 17 (expression -> ( expression ) .)
    $end            reduce using rule 17 (expression -> ( expression ) .)
    )               reduce using rule 17 (expression -> ( expression ) .)
    RPAREN          reduce using rule 17 (expression -> ( expression ) .)


state 29

    (7) statement -> LPAREN expression RPAREN .

    $end            reduce using rule 7 (statement -> LPAREN expression RPAREN .)


state 30

    (4) statement -> ID RECEIVE expression .
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    $end            reduce using rule 4 (statement -> ID RECEIVE expression .)
    LT              shift and go to state 23
    LE              shift and go to state 19
    GT              shift and go to state 24
    GE              shift and go to state 21
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 20


state 31

    (5) statement -> ID RECEIVE QUOTATION . ID QUOTATION NEWLINE

    ID              shift and go to state 41


state 32

    (9) expression -> expression LE expression .
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 9 (expression -> expression LE expression .)
    )               reduce using rule 9 (expression -> expression LE expression .)
    RPAREN          reduce using rule 9 (expression -> expression LE expression .)
    LT              shift and go to state 23
    LE              shift and go to state 19
    GT              shift and go to state 24
    GE              shift and go to state 21
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 20

  ! LT              [ reduce using rule 9 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 9 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 9 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 9 (expression -> expression LE expression .) ]
  ! PLUS            [ reduce using rule 9 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 9 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 9 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression LE expression .) ]


state 33

    (15) expression -> expression DIVIDE expression .
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    LT              reduce using rule 15 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 15 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 15 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 15 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 15 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 15 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 15 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 15 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 15 (expression -> expression DIVIDE expression .)
    )               reduce using rule 15 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 15 (expression -> expression DIVIDE expression .)

  ! LT              [ shift and go to state 23 ]
  ! LE              [ shift and go to state 19 ]
  ! GT              [ shift and go to state 24 ]
  ! GE              [ shift and go to state 21 ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! TIMES           [ shift and go to state 22 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 34

    (11) expression -> expression GE expression .
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 11 (expression -> expression GE expression .)
    )               reduce using rule 11 (expression -> expression GE expression .)
    RPAREN          reduce using rule 11 (expression -> expression GE expression .)
    LT              shift and go to state 23
    LE              shift and go to state 19
    GT              shift and go to state 24
    GE              shift and go to state 21
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 20

  ! LT              [ reduce using rule 11 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 11 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 11 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 11 (expression -> expression GE expression .) ]
  ! PLUS            [ reduce using rule 11 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 11 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> expression GE expression .) ]


state 35

    (14) expression -> expression TIMES expression .
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    LT              reduce using rule 14 (expression -> expression TIMES expression .)
    LE              reduce using rule 14 (expression -> expression TIMES expression .)
    GT              reduce using rule 14 (expression -> expression TIMES expression .)
    GE              reduce using rule 14 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 14 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 14 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 14 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 14 (expression -> expression TIMES expression .)
    $end            reduce using rule 14 (expression -> expression TIMES expression .)
    )               reduce using rule 14 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 14 (expression -> expression TIMES expression .)

  ! LT              [ shift and go to state 23 ]
  ! LE              [ shift and go to state 19 ]
  ! GT              [ shift and go to state 24 ]
  ! GE              [ shift and go to state 21 ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! TIMES           [ shift and go to state 22 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 36

    (8) expression -> expression LT expression .
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 8 (expression -> expression LT expression .)
    )               reduce using rule 8 (expression -> expression LT expression .)
    RPAREN          reduce using rule 8 (expression -> expression LT expression .)
    LT              shift and go to state 23
    LE              shift and go to state 19
    GT              shift and go to state 24
    GE              shift and go to state 21
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 20

  ! LT              [ reduce using rule 8 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 8 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 8 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 8 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 8 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 8 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 8 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression LT expression .) ]


state 37

    (10) expression -> expression GT expression .
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 10 (expression -> expression GT expression .)
    )               reduce using rule 10 (expression -> expression GT expression .)
    RPAREN          reduce using rule 10 (expression -> expression GT expression .)
    LT              shift and go to state 23
    LE              shift and go to state 19
    GT              shift and go to state 24
    GE              shift and go to state 21
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 20

  ! LT              [ reduce using rule 10 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 10 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 10 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 10 (expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 10 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 10 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression GT expression .) ]


state 38

    (12) expression -> expression PLUS expression .
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    LT              reduce using rule 12 (expression -> expression PLUS expression .)
    LE              reduce using rule 12 (expression -> expression PLUS expression .)
    GT              reduce using rule 12 (expression -> expression PLUS expression .)
    GE              reduce using rule 12 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 12 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 12 (expression -> expression PLUS expression .)
    $end            reduce using rule 12 (expression -> expression PLUS expression .)
    )               reduce using rule 12 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 12 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 20

  ! TIMES           [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! LT              [ shift and go to state 23 ]
  ! LE              [ shift and go to state 19 ]
  ! GT              [ shift and go to state 24 ]
  ! GE              [ shift and go to state 21 ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]


state 39

    (13) expression -> expression MINUS expression .
    (8) expression -> expression . LT expression
    (9) expression -> expression . LE expression
    (10) expression -> expression . GT expression
    (11) expression -> expression . GE expression
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    LT              reduce using rule 13 (expression -> expression MINUS expression .)
    LE              reduce using rule 13 (expression -> expression MINUS expression .)
    GT              reduce using rule 13 (expression -> expression MINUS expression .)
    GE              reduce using rule 13 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 13 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 13 (expression -> expression MINUS expression .)
    $end            reduce using rule 13 (expression -> expression MINUS expression .)
    )               reduce using rule 13 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 13 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 20

  ! TIMES           [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! LT              [ shift and go to state 23 ]
  ! LE              [ shift and go to state 19 ]
  ! GT              [ shift and go to state 24 ]
  ! GE              [ shift and go to state 21 ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]


state 40

    (2) statement -> PRINT QUOTATION ID QUOTATION .

    $end            reduce using rule 2 (statement -> PRINT QUOTATION ID QUOTATION .)


state 41

    (5) statement -> ID RECEIVE QUOTATION ID . QUOTATION NEWLINE

    QUOTATION       shift and go to state 42


state 42

    (5) statement -> ID RECEIVE QUOTATION ID QUOTATION . NEWLINE

    NEWLINE         shift and go to state 43


state 43

    (5) statement -> ID RECEIVE QUOTATION ID QUOTATION NEWLINE .

    $end            reduce using rule 5 (statement -> ID RECEIVE QUOTATION ID QUOTATION NEWLINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LT in state 32 resolved as shift
WARNING: shift/reduce conflict for LE in state 32 resolved as shift
WARNING: shift/reduce conflict for GT in state 32 resolved as shift
WARNING: shift/reduce conflict for GE in state 32 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 32 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 32 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 32 resolved as shift
WARNING: shift/reduce conflict for LT in state 34 resolved as shift
WARNING: shift/reduce conflict for LE in state 34 resolved as shift
WARNING: shift/reduce conflict for GT in state 34 resolved as shift
WARNING: shift/reduce conflict for GE in state 34 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 34 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 34 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 34 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 34 resolved as shift
WARNING: shift/reduce conflict for LT in state 36 resolved as shift
WARNING: shift/reduce conflict for LE in state 36 resolved as shift
WARNING: shift/reduce conflict for GT in state 36 resolved as shift
WARNING: shift/reduce conflict for GE in state 36 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 36 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 36 resolved as shift
WARNING: shift/reduce conflict for LT in state 37 resolved as shift
WARNING: shift/reduce conflict for LE in state 37 resolved as shift
WARNING: shift/reduce conflict for GT in state 37 resolved as shift
WARNING: shift/reduce conflict for GE in state 37 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 37 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 37 resolved as shift
