
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftPLUSMINUSleftTIMESDIVIDErightUMINUSID INTEGER FLOAT STRING PLUS MINUS TIMES DIVIDE LPAREN RPAREN SQUARED QUOTATION RECEIVE NEWLINE COLON COMMA LT LE GT GE AND FUN NONE FALSE FOR ENDIF NOT VAR ENDFUN ELSE TO ENDFOR IN PRINT RETURN TRUE OR IFstatement : FUN ID LPAREN declaration_list RPAREN COLONstatement : FUN ID COLONstatement : FUN ID LPAREN RPAREN COLONstatement : VAR ID RECEIVE ID LPAREN RPARENstatement : ID RECEIVE ID LPAREN RPARENexpression : ID LPAREN RPARENdeclaration_list : expressiondeclaration_list : declaration_list expression statement : FOR expression TO expression COLONstatement : FOR ID IN expression TO expression COLONstatement : ENDFORstatement : ENDFUNstatement : RETURN STRINGstatement : RETURN expressionstatement : PRINT expressionstatement : PRINT STRINGstatement : IF expression COLONstatement : ENDIFstatement : VAR ID RECEIVE expressionstatement : VAR ID RECEIVE STRINGstatement : ID RECEIVE expressionstatement : ID RECEIVE STRINGstatement : expressionstatement : LPAREN expression RPARENexpression : expression LT expression\n                  | expression LE expression\n                  | expression GT expression\n                  | expression GE expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : '-' expression %prec UMINUSexpression : '(' expression ')'expression : FLOAT\n                  | INTEGERexpression : expression COMMAexpression : IDstatement :"
    
_lr_action_items = {'RETURN':([0,],[1,]),'IN':([26,],[45,]),'ENDFUN':([0,],[2,]),'PRINT':([0,],[4,]),'COLON':([15,16,20,21,25,32,40,44,52,54,55,56,57,58,59,60,61,62,66,72,79,],[-36,-35,-38,42,-33,53,-37,-34,-6,-26,-32,-28,-31,-25,-27,-29,-30,71,75,78,81,]),'FUN':([0,],[3,]),'MINUS':([13,15,16,17,19,20,23,24,25,26,27,28,32,40,44,50,51,52,54,55,56,57,58,59,60,61,64,65,66,68,69,73,77,79,80,],[-38,-36,-35,41,41,-38,41,41,-33,-38,41,41,41,-37,-34,41,-38,-6,41,-32,41,-31,41,41,-29,-30,41,41,41,41,-38,41,-6,41,-6,]),'STRING':([1,4,30,48,],[18,22,49,67,]),'LE':([13,15,16,17,19,20,23,24,25,26,27,28,32,40,44,50,51,52,54,55,56,57,58,59,60,61,64,65,66,68,69,73,77,79,80,],[-38,-36,-35,33,33,-38,33,33,-33,-38,33,33,33,-37,-34,33,-38,-6,33,-32,33,-31,33,33,-29,-30,33,33,33,33,-38,33,-6,33,-6,]),'RPAREN':([15,16,20,25,28,31,40,43,44,52,54,55,56,57,58,59,60,61,63,64,70,73,76,],[-36,-35,-38,-33,47,52,-37,62,-34,-6,-26,-32,-28,-31,-25,-27,-29,-30,72,-7,77,-8,80,]),')':([15,16,20,24,25,40,44,52,54,55,56,57,58,59,60,61,],[-36,-35,-38,44,-33,-37,-34,-6,-26,-32,-28,-31,-25,-27,-29,-30,]),'(':([0,1,4,5,6,9,10,14,15,16,20,25,30,33,34,35,36,37,38,39,40,41,43,44,45,46,48,52,54,55,56,57,58,59,60,61,63,64,73,74,],[5,5,5,5,5,5,5,5,-36,-35,-38,-33,5,5,5,5,5,5,5,5,-37,5,5,-34,5,5,5,-6,-26,-32,-28,-31,-25,-27,-29,-30,5,-7,-8,5,]),'-':([0,1,4,5,6,9,10,14,15,16,20,25,30,33,34,35,36,37,38,39,40,41,43,44,45,46,48,52,54,55,56,57,58,59,60,61,63,64,73,74,],[6,6,6,6,6,6,6,6,-36,-35,-38,-33,6,6,6,6,6,6,6,6,-37,6,6,-34,6,6,6,-6,-26,-32,-28,-31,-25,-27,-29,-30,6,-7,-8,6,]),'TO':([15,16,20,25,26,27,40,44,52,54,55,56,57,58,59,60,61,65,],[-36,-35,-38,-33,-38,46,-37,-34,-6,-26,-32,-28,-31,-25,-27,-29,-30,74,]),'LT':([13,15,16,17,19,20,23,24,25,26,27,28,32,40,44,50,51,52,54,55,56,57,58,59,60,61,64,65,66,68,69,73,77,79,80,],[-38,-36,-35,37,37,-38,37,37,-33,-38,37,37,37,-37,-34,37,-38,-6,37,-32,37,-31,37,37,-29,-30,37,37,37,37,-38,37,-6,37,-6,]),'PLUS':([13,15,16,17,19,20,23,24,25,26,27,28,32,40,44,50,51,52,54,55,56,57,58,59,60,61,64,65,66,68,69,73,77,79,80,],[-38,-36,-35,39,39,-38,39,39,-33,-38,39,39,39,-37,-34,39,-38,-6,39,-32,39,-31,39,39,-29,-30,39,39,39,39,-38,39,-6,39,-6,]),'ENDFOR':([0,],[7,]),'INTEGER':([0,1,4,5,6,9,10,14,15,16,20,25,30,33,34,35,36,37,38,39,40,41,43,44,45,46,48,52,54,55,56,57,58,59,60,61,63,64,73,74,],[15,15,15,15,15,15,15,15,-36,-35,-38,-33,15,15,15,15,15,15,15,15,-37,15,15,-34,15,15,15,-6,-26,-32,-28,-31,-25,-27,-29,-30,15,-7,-8,15,]),'$end':([0,2,7,8,11,13,15,16,17,18,19,20,22,23,25,40,42,44,47,49,50,51,52,53,54,55,56,57,58,59,60,61,67,68,69,71,75,77,78,80,81,],[-39,-12,-11,0,-18,-38,-36,-35,-23,-13,-14,-38,-16,-15,-33,-37,-2,-34,-24,-22,-21,-38,-6,-17,-26,-32,-28,-31,-25,-27,-29,-30,-20,-19,-38,-3,-9,-5,-1,-4,-10,]),'GT':([13,15,16,17,19,20,23,24,25,26,27,28,32,40,44,50,51,52,54,55,56,57,58,59,60,61,64,65,66,68,69,73,77,79,80,],[-38,-36,-35,38,38,-38,38,38,-33,-38,38,38,38,-37,-34,38,-38,-6,38,-32,38,-31,38,38,-29,-30,38,38,38,38,-38,38,-6,38,-6,]),'DIVIDE':([13,15,16,17,19,20,23,24,25,26,27,28,32,40,44,50,51,52,54,55,56,57,58,59,60,61,64,65,66,68,69,73,77,79,80,],[-38,-36,-35,34,34,-38,34,34,-33,-38,34,34,34,-37,-34,34,-38,-6,34,-32,34,-31,34,34,34,34,34,34,34,34,-38,34,-6,34,-6,]),'FOR':([0,],[9,]),'RECEIVE':([13,29,],[30,48,]),'TIMES':([13,15,16,17,19,20,23,24,25,26,27,28,32,40,44,50,51,52,54,55,56,57,58,59,60,61,64,65,66,68,69,73,77,79,80,],[-38,-36,-35,36,36,-38,36,36,-33,-38,36,36,36,-37,-34,36,-38,-6,36,-32,36,-31,36,36,36,36,36,36,36,36,-38,36,-6,36,-6,]),'GE':([13,15,16,17,19,20,23,24,25,26,27,28,32,40,44,50,51,52,54,55,56,57,58,59,60,61,64,65,66,68,69,73,77,79,80,],[-38,-36,-35,35,35,-38,35,35,-33,-38,35,35,35,-37,-34,35,-38,-6,35,-32,35,-31,35,35,-29,-30,35,35,35,35,-38,35,-6,35,-6,]),'LPAREN':([0,13,20,21,26,51,69,],[10,31,31,43,31,70,76,]),'ENDIF':([0,],[11,]),'VAR':([0,],[12,]),'ID':([0,1,3,4,5,6,9,10,12,14,15,16,20,25,30,33,34,35,36,37,38,39,40,41,43,44,45,46,48,52,54,55,56,57,58,59,60,61,63,64,73,74,],[13,20,21,20,20,20,26,20,29,20,-36,-35,-38,-33,51,20,20,20,20,20,20,20,-37,20,20,-34,20,20,69,-6,-26,-32,-28,-31,-25,-27,-29,-30,20,-7,-8,20,]),'IF':([0,],[14,]),'FLOAT':([0,1,4,5,6,9,10,14,15,16,20,25,30,33,34,35,36,37,38,39,40,41,43,44,45,46,48,52,54,55,56,57,58,59,60,61,63,64,73,74,],[16,16,16,16,16,16,16,16,-36,-35,-38,-33,16,16,16,16,16,16,16,16,-37,16,16,-34,16,16,16,-6,-26,-32,-28,-31,-25,-27,-29,-30,16,-7,-8,16,]),'COMMA':([13,15,16,17,19,20,23,24,25,26,27,28,32,40,44,50,51,52,54,55,56,57,58,59,60,61,64,65,66,68,69,73,77,79,80,],[-38,-36,-35,40,40,-38,40,40,-33,-38,40,40,40,-37,-34,40,-38,-6,40,-32,40,-31,40,40,-29,-30,40,40,40,40,-38,40,-6,40,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,1,4,5,6,9,10,14,30,33,34,35,36,37,38,39,41,43,45,46,48,63,74,],[17,19,23,24,25,27,28,32,50,54,55,56,57,58,59,60,61,64,65,66,68,73,79,]),'statement':([0,],[8,]),'declaration_list':([43,],[63,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> FUN ID LPAREN declaration_list RPAREN COLON','statement',6,'p_fun_expression','parser.py',61),
  ('statement -> FUN ID COLON','statement',3,'p_function_no_param','parser.py',65),
  ('statement -> FUN ID LPAREN RPAREN COLON','statement',5,'p_function_no_param_paren','parser.py',87),
  ('statement -> VAR ID RECEIVE ID LPAREN RPAREN','statement',6,'p_new_statement_function','parser.py',109),
  ('statement -> ID RECEIVE ID LPAREN RPAREN','statement',5,'p_statement_function','parser.py',121),
  ('expression -> ID LPAREN RPAREN','expression',3,'p_call_function','parser.py',139),
  ('declaration_list -> expression','declaration_list',1,'p_declaration_list_1','parser.py',146),
  ('declaration_list -> declaration_list expression','declaration_list',2,'p_declaration_list_2','parser.py',150),
  ('statement -> FOR expression TO expression COLON','statement',5,'p_for_expression','parser.py',154),
  ('statement -> FOR ID IN expression TO expression COLON','statement',7,'p_for_in_expression','parser.py',168),
  ('statement -> ENDFOR','statement',1,'p_endfor','parser.py',187),
  ('statement -> ENDFUN','statement',1,'p_endfun','parser.py',216),
  ('statement -> RETURN STRING','statement',2,'p_return_string','parser.py',221),
  ('statement -> RETURN expression','statement',2,'p_return_expression','parser.py',232),
  ('statement -> PRINT expression','statement',2,'p_print_expression','parser.py',243),
  ('statement -> PRINT STRING','statement',2,'p_print_string','parser.py',248),
  ('statement -> IF expression COLON','statement',3,'p_if','parser.py',253),
  ('statement -> ENDIF','statement',1,'p_endif','parser.py',269),
  ('statement -> VAR ID RECEIVE expression','statement',4,'p_statement_assign','parser.py',274),
  ('statement -> VAR ID RECEIVE STRING','statement',4,'p_string','parser.py',279),
  ('statement -> ID RECEIVE expression','statement',3,'p_change_statement_assign','parser.py',284),
  ('statement -> ID RECEIVE STRING','statement',3,'p_change_string','parser.py',292),
  ('statement -> expression','statement',1,'p_statement_expr','parser.py',300),
  ('statement -> LPAREN expression RPAREN','statement',3,'p_statement_paren','parser.py',304),
  ('expression -> expression LT expression','expression',3,'p_boolean_expression','parser.py',308),
  ('expression -> expression LE expression','expression',3,'p_boolean_expression','parser.py',309),
  ('expression -> expression GT expression','expression',3,'p_boolean_expression','parser.py',310),
  ('expression -> expression GE expression','expression',3,'p_boolean_expression','parser.py',311),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',323),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',324),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',325),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',326),
  ('expression -> - expression','expression',2,'p_expression_uminus','parser.py',338),
  ('expression -> ( expression )','expression',3,'p_expression_group','parser.py',342),
  ('expression -> FLOAT','expression',1,'p_expression_number','parser.py',346),
  ('expression -> INTEGER','expression',1,'p_expression_number','parser.py',347),
  ('expression -> expression COMMA','expression',2,'p_expression_comma','parser.py',351),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',354),
  ('statement -> <empty>','statement',0,'p_null','parser.py',368),
]
