Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    TRUE
    NONE
    NEWLINE
    SQUARED
    ELSE
    AND
    FALSE
    NOT
    OR
    QUOTATION

Grammar

Rule 0     S' -> statement
Rule 1     statement -> FUN ID LPAREN declaration_list RPAREN COLON
Rule 2     statement -> FUN ID COLON
Rule 3     statement -> FUN ID LPAREN RPAREN COLON
Rule 4     statement -> VAR ID RECEIVE ID LPAREN RPAREN
Rule 5     statement -> ID RECEIVE ID LPAREN RPAREN
Rule 6     expression -> ID LPAREN RPAREN
Rule 7     declaration_list -> expression
Rule 8     declaration_list -> declaration_list expression
Rule 9     statement -> FOR expression TO expression COLON
Rule 10    statement -> FOR ID IN expression TO expression COLON
Rule 11    statement -> ENDFOR
Rule 12    statement -> ENDFUN
Rule 13    statement -> RETURN
Rule 14    statement -> PRINT expression
Rule 15    statement -> PRINT STRING
Rule 16    statement -> IF expression COLON
Rule 17    statement -> ENDIF
Rule 18    statement -> VAR ID RECEIVE expression
Rule 19    statement -> VAR ID RECEIVE STRING
Rule 20    statement -> ID RECEIVE expression
Rule 21    statement -> ID RECEIVE STRING
Rule 22    statement -> expression
Rule 23    statement -> LPAREN expression RPAREN
Rule 24    expression -> expression LT expression
Rule 25    expression -> expression LE expression
Rule 26    expression -> expression GT expression
Rule 27    expression -> expression GE expression
Rule 28    expression -> expression PLUS expression
Rule 29    expression -> expression MINUS expression
Rule 30    expression -> expression TIMES expression
Rule 31    expression -> expression DIVIDE expression
Rule 32    expression -> - expression
Rule 33    expression -> ( expression )
Rule 34    expression -> FLOAT
Rule 35    expression -> INTEGER
Rule 36    expression -> expression COMMA
Rule 37    expression -> ID
Rule 38    statement -> <empty>

Terminals, with rules where they appear

(                    : 33
)                    : 33
-                    : 32
AND                  : 
COLON                : 1 2 3 9 10 16
COMMA                : 36
DIVIDE               : 31
ELSE                 : 
ENDFOR               : 11
ENDFUN               : 12
ENDIF                : 17
FALSE                : 
FLOAT                : 34
FOR                  : 9 10
FUN                  : 1 2 3
GE                   : 27
GT                   : 26
ID                   : 1 2 3 4 4 5 5 6 10 18 19 20 21 37
IF                   : 16
IN                   : 10
INTEGER              : 35
LE                   : 25
LPAREN               : 1 3 4 5 6 23
LT                   : 24
MINUS                : 29
NEWLINE              : 
NONE                 : 
NOT                  : 
OR                   : 
PLUS                 : 28
PRINT                : 14 15
QUOTATION            : 
RECEIVE              : 4 5 18 19 20 21
RETURN               : 13
RPAREN               : 1 3 4 5 6 23
SQUARED              : 
STRING               : 15 19 21
TIMES                : 30
TO                   : 9 10
TRUE                 : 
VAR                  : 4 18 19
error                : 

Nonterminals, with rules where they appear

declaration_list     : 1 8
expression           : 7 8 9 9 10 10 14 16 18 20 22 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 33 36
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . FUN ID LPAREN declaration_list RPAREN COLON
    (2) statement -> . FUN ID COLON
    (3) statement -> . FUN ID LPAREN RPAREN COLON
    (4) statement -> . VAR ID RECEIVE ID LPAREN RPAREN
    (5) statement -> . ID RECEIVE ID LPAREN RPAREN
    (9) statement -> . FOR expression TO expression COLON
    (10) statement -> . FOR ID IN expression TO expression COLON
    (11) statement -> . ENDFOR
    (12) statement -> . ENDFUN
    (13) statement -> . RETURN
    (14) statement -> . PRINT expression
    (15) statement -> . PRINT STRING
    (16) statement -> . IF expression COLON
    (17) statement -> . ENDIF
    (18) statement -> . VAR ID RECEIVE expression
    (19) statement -> . VAR ID RECEIVE STRING
    (20) statement -> . ID RECEIVE expression
    (21) statement -> . ID RECEIVE STRING
    (22) statement -> . expression
    (23) statement -> . LPAREN expression RPAREN
    (38) statement -> .
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    FUN             shift and go to state 3
    VAR             shift and go to state 12
    ID              shift and go to state 13
    FOR             shift and go to state 9
    ENDFOR          shift and go to state 7
    ENDFUN          shift and go to state 2
    RETURN          shift and go to state 1
    PRINT           shift and go to state 4
    IF              shift and go to state 14
    ENDIF           shift and go to state 11
    LPAREN          shift and go to state 10
    $end            reduce using rule 38 (statement -> .)
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 17
    statement                      shift and go to state 8

state 1

    (13) statement -> RETURN .

    $end            reduce using rule 13 (statement -> RETURN .)


state 2

    (12) statement -> ENDFUN .

    $end            reduce using rule 12 (statement -> ENDFUN .)


state 3

    (1) statement -> FUN . ID LPAREN declaration_list RPAREN COLON
    (2) statement -> FUN . ID COLON
    (3) statement -> FUN . ID LPAREN RPAREN COLON

    ID              shift and go to state 18


state 4

    (14) statement -> PRINT . expression
    (15) statement -> PRINT . STRING
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    STRING          shift and go to state 19
    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 20

state 5

    (33) expression -> ( . expression )
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 22

state 6

    (32) expression -> - . expression
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 23

state 7

    (11) statement -> ENDFOR .

    $end            reduce using rule 11 (statement -> ENDFOR .)


state 8

    (0) S' -> statement .



state 9

    (9) statement -> FOR . expression TO expression COLON
    (10) statement -> FOR . ID IN expression TO expression COLON
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 24
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 25

state 10

    (23) statement -> LPAREN . expression RPAREN
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 26

state 11

    (17) statement -> ENDIF .

    $end            reduce using rule 17 (statement -> ENDIF .)


state 12

    (4) statement -> VAR . ID RECEIVE ID LPAREN RPAREN
    (18) statement -> VAR . ID RECEIVE expression
    (19) statement -> VAR . ID RECEIVE STRING

    ID              shift and go to state 27


state 13

    (5) statement -> ID . RECEIVE ID LPAREN RPAREN
    (20) statement -> ID . RECEIVE expression
    (21) statement -> ID . RECEIVE STRING
    (6) expression -> ID . LPAREN RPAREN
    (37) expression -> ID .

    RECEIVE         shift and go to state 28
    LPAREN          shift and go to state 29
    LT              reduce using rule 37 (expression -> ID .)
    LE              reduce using rule 37 (expression -> ID .)
    GT              reduce using rule 37 (expression -> ID .)
    GE              reduce using rule 37 (expression -> ID .)
    PLUS            reduce using rule 37 (expression -> ID .)
    MINUS           reduce using rule 37 (expression -> ID .)
    TIMES           reduce using rule 37 (expression -> ID .)
    DIVIDE          reduce using rule 37 (expression -> ID .)
    COMMA           reduce using rule 37 (expression -> ID .)
    $end            reduce using rule 37 (expression -> ID .)


state 14

    (16) statement -> IF . expression COLON
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 30

state 15

    (35) expression -> INTEGER .

    LT              reduce using rule 35 (expression -> INTEGER .)
    LE              reduce using rule 35 (expression -> INTEGER .)
    GT              reduce using rule 35 (expression -> INTEGER .)
    GE              reduce using rule 35 (expression -> INTEGER .)
    PLUS            reduce using rule 35 (expression -> INTEGER .)
    MINUS           reduce using rule 35 (expression -> INTEGER .)
    TIMES           reduce using rule 35 (expression -> INTEGER .)
    DIVIDE          reduce using rule 35 (expression -> INTEGER .)
    COMMA           reduce using rule 35 (expression -> INTEGER .)
    $end            reduce using rule 35 (expression -> INTEGER .)
    )               reduce using rule 35 (expression -> INTEGER .)
    TO              reduce using rule 35 (expression -> INTEGER .)
    RPAREN          reduce using rule 35 (expression -> INTEGER .)
    COLON           reduce using rule 35 (expression -> INTEGER .)
    ID              reduce using rule 35 (expression -> INTEGER .)
    -               reduce using rule 35 (expression -> INTEGER .)
    (               reduce using rule 35 (expression -> INTEGER .)
    FLOAT           reduce using rule 35 (expression -> INTEGER .)
    INTEGER         reduce using rule 35 (expression -> INTEGER .)


state 16

    (34) expression -> FLOAT .

    LT              reduce using rule 34 (expression -> FLOAT .)
    LE              reduce using rule 34 (expression -> FLOAT .)
    GT              reduce using rule 34 (expression -> FLOAT .)
    GE              reduce using rule 34 (expression -> FLOAT .)
    PLUS            reduce using rule 34 (expression -> FLOAT .)
    MINUS           reduce using rule 34 (expression -> FLOAT .)
    TIMES           reduce using rule 34 (expression -> FLOAT .)
    DIVIDE          reduce using rule 34 (expression -> FLOAT .)
    COMMA           reduce using rule 34 (expression -> FLOAT .)
    $end            reduce using rule 34 (expression -> FLOAT .)
    )               reduce using rule 34 (expression -> FLOAT .)
    TO              reduce using rule 34 (expression -> FLOAT .)
    RPAREN          reduce using rule 34 (expression -> FLOAT .)
    COLON           reduce using rule 34 (expression -> FLOAT .)
    ID              reduce using rule 34 (expression -> FLOAT .)
    -               reduce using rule 34 (expression -> FLOAT .)
    (               reduce using rule 34 (expression -> FLOAT .)
    FLOAT           reduce using rule 34 (expression -> FLOAT .)
    INTEGER         reduce using rule 34 (expression -> FLOAT .)


state 17

    (22) statement -> expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    $end            reduce using rule 22 (statement -> expression .)
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38


state 18

    (1) statement -> FUN ID . LPAREN declaration_list RPAREN COLON
    (2) statement -> FUN ID . COLON
    (3) statement -> FUN ID . LPAREN RPAREN COLON

    LPAREN          shift and go to state 41
    COLON           shift and go to state 40


state 19

    (15) statement -> PRINT STRING .

    $end            reduce using rule 15 (statement -> PRINT STRING .)


state 20

    (14) statement -> PRINT expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    $end            reduce using rule 14 (statement -> PRINT expression .)
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38


state 21

    (6) expression -> ID . LPAREN RPAREN
    (37) expression -> ID .

    LPAREN          shift and go to state 29
    LT              reduce using rule 37 (expression -> ID .)
    LE              reduce using rule 37 (expression -> ID .)
    GT              reduce using rule 37 (expression -> ID .)
    GE              reduce using rule 37 (expression -> ID .)
    PLUS            reduce using rule 37 (expression -> ID .)
    MINUS           reduce using rule 37 (expression -> ID .)
    TIMES           reduce using rule 37 (expression -> ID .)
    DIVIDE          reduce using rule 37 (expression -> ID .)
    COMMA           reduce using rule 37 (expression -> ID .)
    $end            reduce using rule 37 (expression -> ID .)
    )               reduce using rule 37 (expression -> ID .)
    TO              reduce using rule 37 (expression -> ID .)
    RPAREN          reduce using rule 37 (expression -> ID .)
    COLON           reduce using rule 37 (expression -> ID .)
    ID              reduce using rule 37 (expression -> ID .)
    -               reduce using rule 37 (expression -> ID .)
    (               reduce using rule 37 (expression -> ID .)
    FLOAT           reduce using rule 37 (expression -> ID .)
    INTEGER         reduce using rule 37 (expression -> ID .)


state 22

    (33) expression -> ( expression . )
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    )               shift and go to state 42
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38


state 23

    (32) expression -> - expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    LT              reduce using rule 32 (expression -> - expression .)
    LE              reduce using rule 32 (expression -> - expression .)
    GT              reduce using rule 32 (expression -> - expression .)
    GE              reduce using rule 32 (expression -> - expression .)
    PLUS            reduce using rule 32 (expression -> - expression .)
    MINUS           reduce using rule 32 (expression -> - expression .)
    TIMES           reduce using rule 32 (expression -> - expression .)
    DIVIDE          reduce using rule 32 (expression -> - expression .)
    COMMA           reduce using rule 32 (expression -> - expression .)
    $end            reduce using rule 32 (expression -> - expression .)
    )               reduce using rule 32 (expression -> - expression .)
    TO              reduce using rule 32 (expression -> - expression .)
    RPAREN          reduce using rule 32 (expression -> - expression .)
    COLON           reduce using rule 32 (expression -> - expression .)
    ID              reduce using rule 32 (expression -> - expression .)
    -               reduce using rule 32 (expression -> - expression .)
    (               reduce using rule 32 (expression -> - expression .)
    FLOAT           reduce using rule 32 (expression -> - expression .)
    INTEGER         reduce using rule 32 (expression -> - expression .)

  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! COMMA           [ shift and go to state 38 ]


state 24

    (10) statement -> FOR ID . IN expression TO expression COLON
    (6) expression -> ID . LPAREN RPAREN
    (37) expression -> ID .

    IN              shift and go to state 43
    LPAREN          shift and go to state 29
    TO              reduce using rule 37 (expression -> ID .)
    LT              reduce using rule 37 (expression -> ID .)
    LE              reduce using rule 37 (expression -> ID .)
    GT              reduce using rule 37 (expression -> ID .)
    GE              reduce using rule 37 (expression -> ID .)
    PLUS            reduce using rule 37 (expression -> ID .)
    MINUS           reduce using rule 37 (expression -> ID .)
    TIMES           reduce using rule 37 (expression -> ID .)
    DIVIDE          reduce using rule 37 (expression -> ID .)
    COMMA           reduce using rule 37 (expression -> ID .)


state 25

    (9) statement -> FOR expression . TO expression COLON
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    TO              shift and go to state 44
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38


state 26

    (23) statement -> LPAREN expression . RPAREN
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    RPAREN          shift and go to state 45
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38


state 27

    (4) statement -> VAR ID . RECEIVE ID LPAREN RPAREN
    (18) statement -> VAR ID . RECEIVE expression
    (19) statement -> VAR ID . RECEIVE STRING

    RECEIVE         shift and go to state 46


state 28

    (5) statement -> ID RECEIVE . ID LPAREN RPAREN
    (20) statement -> ID RECEIVE . expression
    (21) statement -> ID RECEIVE . STRING
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 49
    STRING          shift and go to state 47
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 48

state 29

    (6) expression -> ID LPAREN . RPAREN

    RPAREN          shift and go to state 50


state 30

    (16) statement -> IF expression . COLON
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    COLON           shift and go to state 51
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38


state 31

    (25) expression -> expression LE . expression
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 52

state 32

    (31) expression -> expression DIVIDE . expression
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 53

state 33

    (27) expression -> expression GE . expression
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 54

state 34

    (30) expression -> expression TIMES . expression
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 55

state 35

    (24) expression -> expression LT . expression
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 56

state 36

    (26) expression -> expression GT . expression
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 57

state 37

    (28) expression -> expression PLUS . expression
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 58

state 38

    (36) expression -> expression COMMA .

    LT              reduce using rule 36 (expression -> expression COMMA .)
    LE              reduce using rule 36 (expression -> expression COMMA .)
    GT              reduce using rule 36 (expression -> expression COMMA .)
    GE              reduce using rule 36 (expression -> expression COMMA .)
    PLUS            reduce using rule 36 (expression -> expression COMMA .)
    MINUS           reduce using rule 36 (expression -> expression COMMA .)
    TIMES           reduce using rule 36 (expression -> expression COMMA .)
    DIVIDE          reduce using rule 36 (expression -> expression COMMA .)
    COMMA           reduce using rule 36 (expression -> expression COMMA .)
    $end            reduce using rule 36 (expression -> expression COMMA .)
    )               reduce using rule 36 (expression -> expression COMMA .)
    TO              reduce using rule 36 (expression -> expression COMMA .)
    RPAREN          reduce using rule 36 (expression -> expression COMMA .)
    COLON           reduce using rule 36 (expression -> expression COMMA .)
    ID              reduce using rule 36 (expression -> expression COMMA .)
    -               reduce using rule 36 (expression -> expression COMMA .)
    (               reduce using rule 36 (expression -> expression COMMA .)
    FLOAT           reduce using rule 36 (expression -> expression COMMA .)
    INTEGER         reduce using rule 36 (expression -> expression COMMA .)


state 39

    (29) expression -> expression MINUS . expression
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 59

state 40

    (2) statement -> FUN ID COLON .

    $end            reduce using rule 2 (statement -> FUN ID COLON .)


state 41

    (1) statement -> FUN ID LPAREN . declaration_list RPAREN COLON
    (3) statement -> FUN ID LPAREN . RPAREN COLON
    (7) declaration_list -> . expression
    (8) declaration_list -> . declaration_list expression
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    RPAREN          shift and go to state 60
    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 62
    declaration_list               shift and go to state 61

state 42

    (33) expression -> ( expression ) .

    LT              reduce using rule 33 (expression -> ( expression ) .)
    LE              reduce using rule 33 (expression -> ( expression ) .)
    GT              reduce using rule 33 (expression -> ( expression ) .)
    GE              reduce using rule 33 (expression -> ( expression ) .)
    PLUS            reduce using rule 33 (expression -> ( expression ) .)
    MINUS           reduce using rule 33 (expression -> ( expression ) .)
    TIMES           reduce using rule 33 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 33 (expression -> ( expression ) .)
    COMMA           reduce using rule 33 (expression -> ( expression ) .)
    $end            reduce using rule 33 (expression -> ( expression ) .)
    )               reduce using rule 33 (expression -> ( expression ) .)
    TO              reduce using rule 33 (expression -> ( expression ) .)
    RPAREN          reduce using rule 33 (expression -> ( expression ) .)
    COLON           reduce using rule 33 (expression -> ( expression ) .)
    ID              reduce using rule 33 (expression -> ( expression ) .)
    -               reduce using rule 33 (expression -> ( expression ) .)
    (               reduce using rule 33 (expression -> ( expression ) .)
    FLOAT           reduce using rule 33 (expression -> ( expression ) .)
    INTEGER         reduce using rule 33 (expression -> ( expression ) .)


state 43

    (10) statement -> FOR ID IN . expression TO expression COLON
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 63

state 44

    (9) statement -> FOR expression TO . expression COLON
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 64

state 45

    (23) statement -> LPAREN expression RPAREN .

    $end            reduce using rule 23 (statement -> LPAREN expression RPAREN .)


state 46

    (4) statement -> VAR ID RECEIVE . ID LPAREN RPAREN
    (18) statement -> VAR ID RECEIVE . expression
    (19) statement -> VAR ID RECEIVE . STRING
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 67
    STRING          shift and go to state 65
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 66

state 47

    (21) statement -> ID RECEIVE STRING .

    $end            reduce using rule 21 (statement -> ID RECEIVE STRING .)


state 48

    (20) statement -> ID RECEIVE expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    $end            reduce using rule 20 (statement -> ID RECEIVE expression .)
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38


state 49

    (5) statement -> ID RECEIVE ID . LPAREN RPAREN
    (6) expression -> ID . LPAREN RPAREN
    (37) expression -> ID .

    LPAREN          shift and go to state 68
    LT              reduce using rule 37 (expression -> ID .)
    LE              reduce using rule 37 (expression -> ID .)
    GT              reduce using rule 37 (expression -> ID .)
    GE              reduce using rule 37 (expression -> ID .)
    PLUS            reduce using rule 37 (expression -> ID .)
    MINUS           reduce using rule 37 (expression -> ID .)
    TIMES           reduce using rule 37 (expression -> ID .)
    DIVIDE          reduce using rule 37 (expression -> ID .)
    COMMA           reduce using rule 37 (expression -> ID .)
    $end            reduce using rule 37 (expression -> ID .)


state 50

    (6) expression -> ID LPAREN RPAREN .

    LT              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    LE              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    GT              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    GE              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    $end            reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    )               reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    TO              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    COLON           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    ID              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    -               reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    (               reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    FLOAT           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    INTEGER         reduce using rule 6 (expression -> ID LPAREN RPAREN .)


state 51

    (16) statement -> IF expression COLON .

    $end            reduce using rule 16 (statement -> IF expression COLON .)


state 52

    (25) expression -> expression LE expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 25 (expression -> expression LE expression .)
    )               reduce using rule 25 (expression -> expression LE expression .)
    TO              reduce using rule 25 (expression -> expression LE expression .)
    RPAREN          reduce using rule 25 (expression -> expression LE expression .)
    COLON           reduce using rule 25 (expression -> expression LE expression .)
    ID              reduce using rule 25 (expression -> expression LE expression .)
    -               reduce using rule 25 (expression -> expression LE expression .)
    (               reduce using rule 25 (expression -> expression LE expression .)
    FLOAT           reduce using rule 25 (expression -> expression LE expression .)
    INTEGER         reduce using rule 25 (expression -> expression LE expression .)
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38

  ! LT              [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! PLUS            [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! COMMA           [ reduce using rule 25 (expression -> expression LE expression .) ]


state 53

    (31) expression -> expression DIVIDE expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    LT              reduce using rule 31 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 31 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 31 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 31 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 31 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 31 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 31 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 31 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 31 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 31 (expression -> expression DIVIDE expression .)
    )               reduce using rule 31 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 31 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 31 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 31 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 31 (expression -> expression DIVIDE expression .)
    -               reduce using rule 31 (expression -> expression DIVIDE expression .)
    (               reduce using rule 31 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 31 (expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 31 (expression -> expression DIVIDE expression .)

  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! COMMA           [ shift and go to state 38 ]


state 54

    (27) expression -> expression GE expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 27 (expression -> expression GE expression .)
    )               reduce using rule 27 (expression -> expression GE expression .)
    TO              reduce using rule 27 (expression -> expression GE expression .)
    RPAREN          reduce using rule 27 (expression -> expression GE expression .)
    COLON           reduce using rule 27 (expression -> expression GE expression .)
    ID              reduce using rule 27 (expression -> expression GE expression .)
    -               reduce using rule 27 (expression -> expression GE expression .)
    (               reduce using rule 27 (expression -> expression GE expression .)
    FLOAT           reduce using rule 27 (expression -> expression GE expression .)
    INTEGER         reduce using rule 27 (expression -> expression GE expression .)
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38

  ! LT              [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! PLUS            [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! COMMA           [ reduce using rule 27 (expression -> expression GE expression .) ]


state 55

    (30) expression -> expression TIMES expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    LT              reduce using rule 30 (expression -> expression TIMES expression .)
    LE              reduce using rule 30 (expression -> expression TIMES expression .)
    GT              reduce using rule 30 (expression -> expression TIMES expression .)
    GE              reduce using rule 30 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 30 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 30 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 30 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 30 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 30 (expression -> expression TIMES expression .)
    $end            reduce using rule 30 (expression -> expression TIMES expression .)
    )               reduce using rule 30 (expression -> expression TIMES expression .)
    TO              reduce using rule 30 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 30 (expression -> expression TIMES expression .)
    COLON           reduce using rule 30 (expression -> expression TIMES expression .)
    ID              reduce using rule 30 (expression -> expression TIMES expression .)
    -               reduce using rule 30 (expression -> expression TIMES expression .)
    (               reduce using rule 30 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 30 (expression -> expression TIMES expression .)
    INTEGER         reduce using rule 30 (expression -> expression TIMES expression .)

  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! COMMA           [ shift and go to state 38 ]


state 56

    (24) expression -> expression LT expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 24 (expression -> expression LT expression .)
    )               reduce using rule 24 (expression -> expression LT expression .)
    TO              reduce using rule 24 (expression -> expression LT expression .)
    RPAREN          reduce using rule 24 (expression -> expression LT expression .)
    COLON           reduce using rule 24 (expression -> expression LT expression .)
    ID              reduce using rule 24 (expression -> expression LT expression .)
    -               reduce using rule 24 (expression -> expression LT expression .)
    (               reduce using rule 24 (expression -> expression LT expression .)
    FLOAT           reduce using rule 24 (expression -> expression LT expression .)
    INTEGER         reduce using rule 24 (expression -> expression LT expression .)
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38

  ! LT              [ reduce using rule 24 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 24 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 24 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 24 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 24 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression LT expression .) ]
  ! COMMA           [ reduce using rule 24 (expression -> expression LT expression .) ]


state 57

    (26) expression -> expression GT expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 26 (expression -> expression GT expression .)
    )               reduce using rule 26 (expression -> expression GT expression .)
    TO              reduce using rule 26 (expression -> expression GT expression .)
    RPAREN          reduce using rule 26 (expression -> expression GT expression .)
    COLON           reduce using rule 26 (expression -> expression GT expression .)
    ID              reduce using rule 26 (expression -> expression GT expression .)
    -               reduce using rule 26 (expression -> expression GT expression .)
    (               reduce using rule 26 (expression -> expression GT expression .)
    FLOAT           reduce using rule 26 (expression -> expression GT expression .)
    INTEGER         reduce using rule 26 (expression -> expression GT expression .)
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38

  ! LT              [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! COMMA           [ reduce using rule 26 (expression -> expression GT expression .) ]


state 58

    (28) expression -> expression PLUS expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    LT              reduce using rule 28 (expression -> expression PLUS expression .)
    LE              reduce using rule 28 (expression -> expression PLUS expression .)
    GT              reduce using rule 28 (expression -> expression PLUS expression .)
    GE              reduce using rule 28 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 28 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 28 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 28 (expression -> expression PLUS expression .)
    $end            reduce using rule 28 (expression -> expression PLUS expression .)
    )               reduce using rule 28 (expression -> expression PLUS expression .)
    TO              reduce using rule 28 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 28 (expression -> expression PLUS expression .)
    COLON           reduce using rule 28 (expression -> expression PLUS expression .)
    ID              reduce using rule 28 (expression -> expression PLUS expression .)
    -               reduce using rule 28 (expression -> expression PLUS expression .)
    (               reduce using rule 28 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 28 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 28 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32

  ! TIMES           [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 39 ]
  ! COMMA           [ shift and go to state 38 ]


state 59

    (29) expression -> expression MINUS expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    LT              reduce using rule 29 (expression -> expression MINUS expression .)
    LE              reduce using rule 29 (expression -> expression MINUS expression .)
    GT              reduce using rule 29 (expression -> expression MINUS expression .)
    GE              reduce using rule 29 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 29 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 29 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 29 (expression -> expression MINUS expression .)
    $end            reduce using rule 29 (expression -> expression MINUS expression .)
    )               reduce using rule 29 (expression -> expression MINUS expression .)
    TO              reduce using rule 29 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 29 (expression -> expression MINUS expression .)
    COLON           reduce using rule 29 (expression -> expression MINUS expression .)
    ID              reduce using rule 29 (expression -> expression MINUS expression .)
    -               reduce using rule 29 (expression -> expression MINUS expression .)
    (               reduce using rule 29 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 29 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 29 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32

  ! TIMES           [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 39 ]
  ! COMMA           [ shift and go to state 38 ]


state 60

    (3) statement -> FUN ID LPAREN RPAREN . COLON

    COLON           shift and go to state 69


state 61

    (1) statement -> FUN ID LPAREN declaration_list . RPAREN COLON
    (8) declaration_list -> declaration_list . expression
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    RPAREN          shift and go to state 70
    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 71

state 62

    (7) declaration_list -> expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    RPAREN          reduce using rule 7 (declaration_list -> expression .)
    ID              reduce using rule 7 (declaration_list -> expression .)
    -               reduce using rule 7 (declaration_list -> expression .)
    (               reduce using rule 7 (declaration_list -> expression .)
    FLOAT           reduce using rule 7 (declaration_list -> expression .)
    INTEGER         reduce using rule 7 (declaration_list -> expression .)
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38


state 63

    (10) statement -> FOR ID IN expression . TO expression COLON
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    TO              shift and go to state 72
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38


state 64

    (9) statement -> FOR expression TO expression . COLON
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    COLON           shift and go to state 73
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38


state 65

    (19) statement -> VAR ID RECEIVE STRING .

    $end            reduce using rule 19 (statement -> VAR ID RECEIVE STRING .)


state 66

    (18) statement -> VAR ID RECEIVE expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    $end            reduce using rule 18 (statement -> VAR ID RECEIVE expression .)
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38


state 67

    (4) statement -> VAR ID RECEIVE ID . LPAREN RPAREN
    (6) expression -> ID . LPAREN RPAREN
    (37) expression -> ID .

    LPAREN          shift and go to state 74
    LT              reduce using rule 37 (expression -> ID .)
    LE              reduce using rule 37 (expression -> ID .)
    GT              reduce using rule 37 (expression -> ID .)
    GE              reduce using rule 37 (expression -> ID .)
    PLUS            reduce using rule 37 (expression -> ID .)
    MINUS           reduce using rule 37 (expression -> ID .)
    TIMES           reduce using rule 37 (expression -> ID .)
    DIVIDE          reduce using rule 37 (expression -> ID .)
    COMMA           reduce using rule 37 (expression -> ID .)
    $end            reduce using rule 37 (expression -> ID .)


state 68

    (5) statement -> ID RECEIVE ID LPAREN . RPAREN
    (6) expression -> ID LPAREN . RPAREN

    RPAREN          shift and go to state 75


state 69

    (3) statement -> FUN ID LPAREN RPAREN COLON .

    $end            reduce using rule 3 (statement -> FUN ID LPAREN RPAREN COLON .)


state 70

    (1) statement -> FUN ID LPAREN declaration_list RPAREN . COLON

    COLON           shift and go to state 76


state 71

    (8) declaration_list -> declaration_list expression .
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    RPAREN          reduce using rule 8 (declaration_list -> declaration_list expression .)
    ID              reduce using rule 8 (declaration_list -> declaration_list expression .)
    -               reduce using rule 8 (declaration_list -> declaration_list expression .)
    (               reduce using rule 8 (declaration_list -> declaration_list expression .)
    FLOAT           reduce using rule 8 (declaration_list -> declaration_list expression .)
    INTEGER         reduce using rule 8 (declaration_list -> declaration_list expression .)
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38


state 72

    (10) statement -> FOR ID IN expression TO . expression COLON
    (6) expression -> . ID LPAREN RPAREN
    (24) expression -> . expression LT expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . - expression
    (33) expression -> . ( expression )
    (34) expression -> . FLOAT
    (35) expression -> . INTEGER
    (36) expression -> . expression COMMA
    (37) expression -> . ID

    ID              shift and go to state 21
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 77

state 73

    (9) statement -> FOR expression TO expression COLON .

    $end            reduce using rule 9 (statement -> FOR expression TO expression COLON .)


state 74

    (4) statement -> VAR ID RECEIVE ID LPAREN . RPAREN
    (6) expression -> ID LPAREN . RPAREN

    RPAREN          shift and go to state 78


state 75

    (5) statement -> ID RECEIVE ID LPAREN RPAREN .
    (6) expression -> ID LPAREN RPAREN .

  ! reduce/reduce conflict for $end resolved using rule 5 (statement -> ID RECEIVE ID LPAREN RPAREN .)
    $end            reduce using rule 5 (statement -> ID RECEIVE ID LPAREN RPAREN .)
    LT              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    LE              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    GT              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    GE              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 6 (expression -> ID LPAREN RPAREN .)

  ! $end            [ reduce using rule 6 (expression -> ID LPAREN RPAREN .) ]


state 76

    (1) statement -> FUN ID LPAREN declaration_list RPAREN COLON .

    $end            reduce using rule 1 (statement -> FUN ID LPAREN declaration_list RPAREN COLON .)


state 77

    (10) statement -> FOR ID IN expression TO expression . COLON
    (24) expression -> expression . LT expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (36) expression -> expression . COMMA

    COLON           shift and go to state 79
    LT              shift and go to state 35
    LE              shift and go to state 31
    GT              shift and go to state 36
    GE              shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 39
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 32
    COMMA           shift and go to state 38


state 78

    (4) statement -> VAR ID RECEIVE ID LPAREN RPAREN .
    (6) expression -> ID LPAREN RPAREN .

  ! reduce/reduce conflict for $end resolved using rule 4 (statement -> VAR ID RECEIVE ID LPAREN RPAREN .)
    $end            reduce using rule 4 (statement -> VAR ID RECEIVE ID LPAREN RPAREN .)
    LT              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    LE              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    GT              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    GE              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 6 (expression -> ID LPAREN RPAREN .)

  ! $end            [ reduce using rule 6 (expression -> ID LPAREN RPAREN .) ]


state 79

    (10) statement -> FOR ID IN expression TO expression COLON .

    $end            reduce using rule 10 (statement -> FOR ID IN expression TO expression COLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LT in state 52 resolved as shift
WARNING: shift/reduce conflict for LE in state 52 resolved as shift
WARNING: shift/reduce conflict for GT in state 52 resolved as shift
WARNING: shift/reduce conflict for GE in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 52 resolved as shift
WARNING: shift/reduce conflict for LT in state 54 resolved as shift
WARNING: shift/reduce conflict for LE in state 54 resolved as shift
WARNING: shift/reduce conflict for GT in state 54 resolved as shift
WARNING: shift/reduce conflict for GE in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 54 resolved as shift
WARNING: shift/reduce conflict for LT in state 56 resolved as shift
WARNING: shift/reduce conflict for LE in state 56 resolved as shift
WARNING: shift/reduce conflict for GT in state 56 resolved as shift
WARNING: shift/reduce conflict for GE in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 56 resolved as shift
WARNING: shift/reduce conflict for LT in state 57 resolved as shift
WARNING: shift/reduce conflict for LE in state 57 resolved as shift
WARNING: shift/reduce conflict for GT in state 57 resolved as shift
WARNING: shift/reduce conflict for GE in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 57 resolved as shift
WARNING: reduce/reduce conflict in state 75 resolved using rule (statement -> ID RECEIVE ID LPAREN RPAREN)
WARNING: rejected rule (expression -> ID LPAREN RPAREN) in state 75
WARNING: reduce/reduce conflict in state 78 resolved using rule (statement -> VAR ID RECEIVE ID LPAREN RPAREN)
WARNING: rejected rule (expression -> ID LPAREN RPAREN) in state 78
