Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    RETURN
    TRUE
    NONE
    NEWLINE
    SQUARED
    ELSE
    AND
    FALSE
    NOT
    OR
    QUOTATION

Grammar

Rule 0     S' -> statement
Rule 1     statement -> FOR expression TO expression COLON
Rule 2     statement -> FOR ID IN expression TO expression COLON
Rule 3     statement -> END
Rule 4     statement -> PRINT expression
Rule 5     statement -> PRINT STRING
Rule 6     statement -> IF expression
Rule 7     statement -> ID RECEIVE expression
Rule 8     statement -> ID RECEIVE STRING
Rule 9     statement -> expression
Rule 10    statement -> LPAREN expression RPAREN
Rule 11    expression -> expression LT expression
Rule 12    expression -> expression LE expression
Rule 13    expression -> expression GT expression
Rule 14    expression -> expression GE expression
Rule 15    expression -> expression PLUS expression
Rule 16    expression -> expression MINUS expression
Rule 17    expression -> expression TIMES expression
Rule 18    expression -> expression DIVIDE expression
Rule 19    expression -> - expression
Rule 20    expression -> ( expression )
Rule 21    expression -> FLOAT
Rule 22    expression -> INTEGER
Rule 23    expression -> ID

Terminals, with rules where they appear

(                    : 20
)                    : 20
-                    : 19
AND                  : 
COLON                : 1 2
DIVIDE               : 18
ELSE                 : 
END                  : 3
FALSE                : 
FLOAT                : 21
FOR                  : 1 2
GE                   : 14
GT                   : 13
ID                   : 2 7 8 23
IF                   : 6
IN                   : 2
INTEGER              : 22
LE                   : 12
LPAREN               : 10
LT                   : 11
MINUS                : 16
NEWLINE              : 
NONE                 : 
NOT                  : 
OR                   : 
PLUS                 : 15
PRINT                : 4 5
QUOTATION            : 
RECEIVE              : 7 8
RETURN               : 
RPAREN               : 10
SQUARED              : 
STRING               : 5 8
TIMES                : 17
TO                   : 1 2
TRUE                 : 
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 2 2 4 6 7 9 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 20
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . FOR expression TO expression COLON
    (2) statement -> . FOR ID IN expression TO expression COLON
    (3) statement -> . END
    (4) statement -> . PRINT expression
    (5) statement -> . PRINT STRING
    (6) statement -> . IF expression
    (7) statement -> . ID RECEIVE expression
    (8) statement -> . ID RECEIVE STRING
    (9) statement -> . expression
    (10) statement -> . LPAREN expression RPAREN
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    FOR             shift and go to state 6
    END             shift and go to state 5
    PRINT           shift and go to state 1
    IF              shift and go to state 9
    ID              shift and go to state 8
    LPAREN          shift and go to state 7
    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10

    expression                     shift and go to state 12
    statement                      shift and go to state 4

state 1

    (4) statement -> PRINT . expression
    (5) statement -> PRINT . STRING
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    STRING          shift and go to state 13
    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 15

state 2

    (20) expression -> ( . expression )
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 16

state 3

    (19) expression -> - . expression
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 17

state 4

    (0) S' -> statement .



state 5

    (3) statement -> END .

    $end            reduce using rule 3 (statement -> END .)


state 6

    (1) statement -> FOR . expression TO expression COLON
    (2) statement -> FOR . ID IN expression TO expression COLON
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10

    expression                     shift and go to state 18

state 7

    (10) statement -> LPAREN . expression RPAREN
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 20

state 8

    (7) statement -> ID . RECEIVE expression
    (8) statement -> ID . RECEIVE STRING
    (23) expression -> ID .

    RECEIVE         shift and go to state 21
    LT              reduce using rule 23 (expression -> ID .)
    LE              reduce using rule 23 (expression -> ID .)
    GT              reduce using rule 23 (expression -> ID .)
    GE              reduce using rule 23 (expression -> ID .)
    PLUS            reduce using rule 23 (expression -> ID .)
    MINUS           reduce using rule 23 (expression -> ID .)
    TIMES           reduce using rule 23 (expression -> ID .)
    DIVIDE          reduce using rule 23 (expression -> ID .)
    $end            reduce using rule 23 (expression -> ID .)


state 9

    (6) statement -> IF . expression
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 22

state 10

    (22) expression -> INTEGER .

    LT              reduce using rule 22 (expression -> INTEGER .)
    LE              reduce using rule 22 (expression -> INTEGER .)
    GT              reduce using rule 22 (expression -> INTEGER .)
    GE              reduce using rule 22 (expression -> INTEGER .)
    PLUS            reduce using rule 22 (expression -> INTEGER .)
    MINUS           reduce using rule 22 (expression -> INTEGER .)
    TIMES           reduce using rule 22 (expression -> INTEGER .)
    DIVIDE          reduce using rule 22 (expression -> INTEGER .)
    $end            reduce using rule 22 (expression -> INTEGER .)
    )               reduce using rule 22 (expression -> INTEGER .)
    TO              reduce using rule 22 (expression -> INTEGER .)
    RPAREN          reduce using rule 22 (expression -> INTEGER .)
    COLON           reduce using rule 22 (expression -> INTEGER .)


state 11

    (21) expression -> FLOAT .

    LT              reduce using rule 21 (expression -> FLOAT .)
    LE              reduce using rule 21 (expression -> FLOAT .)
    GT              reduce using rule 21 (expression -> FLOAT .)
    GE              reduce using rule 21 (expression -> FLOAT .)
    PLUS            reduce using rule 21 (expression -> FLOAT .)
    MINUS           reduce using rule 21 (expression -> FLOAT .)
    TIMES           reduce using rule 21 (expression -> FLOAT .)
    DIVIDE          reduce using rule 21 (expression -> FLOAT .)
    $end            reduce using rule 21 (expression -> FLOAT .)
    )               reduce using rule 21 (expression -> FLOAT .)
    TO              reduce using rule 21 (expression -> FLOAT .)
    RPAREN          reduce using rule 21 (expression -> FLOAT .)
    COLON           reduce using rule 21 (expression -> FLOAT .)


state 12

    (9) statement -> expression .
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    $end            reduce using rule 9 (statement -> expression .)
    LT              shift and go to state 27
    LE              shift and go to state 23
    GT              shift and go to state 28
    GE              shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24


state 13

    (5) statement -> PRINT STRING .

    $end            reduce using rule 5 (statement -> PRINT STRING .)


state 14

    (23) expression -> ID .

    LT              reduce using rule 23 (expression -> ID .)
    LE              reduce using rule 23 (expression -> ID .)
    GT              reduce using rule 23 (expression -> ID .)
    GE              reduce using rule 23 (expression -> ID .)
    PLUS            reduce using rule 23 (expression -> ID .)
    MINUS           reduce using rule 23 (expression -> ID .)
    TIMES           reduce using rule 23 (expression -> ID .)
    DIVIDE          reduce using rule 23 (expression -> ID .)
    $end            reduce using rule 23 (expression -> ID .)
    )               reduce using rule 23 (expression -> ID .)
    TO              reduce using rule 23 (expression -> ID .)
    RPAREN          reduce using rule 23 (expression -> ID .)
    COLON           reduce using rule 23 (expression -> ID .)


state 15

    (4) statement -> PRINT expression .
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    $end            reduce using rule 4 (statement -> PRINT expression .)
    LT              shift and go to state 27
    LE              shift and go to state 23
    GT              shift and go to state 28
    GE              shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24


state 16

    (20) expression -> ( expression . )
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    )               shift and go to state 31
    LT              shift and go to state 27
    LE              shift and go to state 23
    GT              shift and go to state 28
    GE              shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24


state 17

    (19) expression -> - expression .
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    LT              reduce using rule 19 (expression -> - expression .)
    LE              reduce using rule 19 (expression -> - expression .)
    GT              reduce using rule 19 (expression -> - expression .)
    GE              reduce using rule 19 (expression -> - expression .)
    PLUS            reduce using rule 19 (expression -> - expression .)
    MINUS           reduce using rule 19 (expression -> - expression .)
    TIMES           reduce using rule 19 (expression -> - expression .)
    DIVIDE          reduce using rule 19 (expression -> - expression .)
    $end            reduce using rule 19 (expression -> - expression .)
    )               reduce using rule 19 (expression -> - expression .)
    TO              reduce using rule 19 (expression -> - expression .)
    RPAREN          reduce using rule 19 (expression -> - expression .)
    COLON           reduce using rule 19 (expression -> - expression .)

  ! LT              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 23 ]
  ! GT              [ shift and go to state 28 ]
  ! GE              [ shift and go to state 25 ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 26 ]
  ! DIVIDE          [ shift and go to state 24 ]


state 18

    (1) statement -> FOR expression . TO expression COLON
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    TO              shift and go to state 32
    LT              shift and go to state 27
    LE              shift and go to state 23
    GT              shift and go to state 28
    GE              shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24


state 19

    (2) statement -> FOR ID . IN expression TO expression COLON
    (23) expression -> ID .

    IN              shift and go to state 33
    TO              reduce using rule 23 (expression -> ID .)
    LT              reduce using rule 23 (expression -> ID .)
    LE              reduce using rule 23 (expression -> ID .)
    GT              reduce using rule 23 (expression -> ID .)
    GE              reduce using rule 23 (expression -> ID .)
    PLUS            reduce using rule 23 (expression -> ID .)
    MINUS           reduce using rule 23 (expression -> ID .)
    TIMES           reduce using rule 23 (expression -> ID .)
    DIVIDE          reduce using rule 23 (expression -> ID .)


state 20

    (10) statement -> LPAREN expression . RPAREN
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 34
    LT              shift and go to state 27
    LE              shift and go to state 23
    GT              shift and go to state 28
    GE              shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24


state 21

    (7) statement -> ID RECEIVE . expression
    (8) statement -> ID RECEIVE . STRING
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    STRING          shift and go to state 35
    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 36

state 22

    (6) statement -> IF expression .
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    $end            reduce using rule 6 (statement -> IF expression .)
    LT              shift and go to state 27
    LE              shift and go to state 23
    GT              shift and go to state 28
    GE              shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24


state 23

    (12) expression -> expression LE . expression
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 37

state 24

    (18) expression -> expression DIVIDE . expression
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 38

state 25

    (14) expression -> expression GE . expression
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 39

state 26

    (17) expression -> expression TIMES . expression
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 40

state 27

    (11) expression -> expression LT . expression
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 41

state 28

    (13) expression -> expression GT . expression
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 42

state 29

    (15) expression -> expression PLUS . expression
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 43

state 30

    (16) expression -> expression MINUS . expression
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 44

state 31

    (20) expression -> ( expression ) .

    LT              reduce using rule 20 (expression -> ( expression ) .)
    LE              reduce using rule 20 (expression -> ( expression ) .)
    GT              reduce using rule 20 (expression -> ( expression ) .)
    GE              reduce using rule 20 (expression -> ( expression ) .)
    PLUS            reduce using rule 20 (expression -> ( expression ) .)
    MINUS           reduce using rule 20 (expression -> ( expression ) .)
    TIMES           reduce using rule 20 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 20 (expression -> ( expression ) .)
    $end            reduce using rule 20 (expression -> ( expression ) .)
    )               reduce using rule 20 (expression -> ( expression ) .)
    TO              reduce using rule 20 (expression -> ( expression ) .)
    RPAREN          reduce using rule 20 (expression -> ( expression ) .)
    COLON           reduce using rule 20 (expression -> ( expression ) .)


state 32

    (1) statement -> FOR expression TO . expression COLON
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 45

state 33

    (2) statement -> FOR ID IN . expression TO expression COLON
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 46

state 34

    (10) statement -> LPAREN expression RPAREN .

    $end            reduce using rule 10 (statement -> LPAREN expression RPAREN .)


state 35

    (8) statement -> ID RECEIVE STRING .

    $end            reduce using rule 8 (statement -> ID RECEIVE STRING .)


state 36

    (7) statement -> ID RECEIVE expression .
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    $end            reduce using rule 7 (statement -> ID RECEIVE expression .)
    LT              shift and go to state 27
    LE              shift and go to state 23
    GT              shift and go to state 28
    GE              shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24


state 37

    (12) expression -> expression LE expression .
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 12 (expression -> expression LE expression .)
    )               reduce using rule 12 (expression -> expression LE expression .)
    TO              reduce using rule 12 (expression -> expression LE expression .)
    RPAREN          reduce using rule 12 (expression -> expression LE expression .)
    COLON           reduce using rule 12 (expression -> expression LE expression .)
    LT              shift and go to state 27
    LE              shift and go to state 23
    GT              shift and go to state 28
    GE              shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24

  ! LT              [ reduce using rule 12 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 12 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 12 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 12 (expression -> expression LE expression .) ]
  ! PLUS            [ reduce using rule 12 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 12 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 12 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> expression LE expression .) ]


state 38

    (18) expression -> expression DIVIDE expression .
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    LT              reduce using rule 18 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 18 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 18 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 18 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 18 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 18 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 18 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 18 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 18 (expression -> expression DIVIDE expression .)
    )               reduce using rule 18 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 18 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 18 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 18 (expression -> expression DIVIDE expression .)

  ! LT              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 23 ]
  ! GT              [ shift and go to state 28 ]
  ! GE              [ shift and go to state 25 ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 26 ]
  ! DIVIDE          [ shift and go to state 24 ]


state 39

    (14) expression -> expression GE expression .
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 14 (expression -> expression GE expression .)
    )               reduce using rule 14 (expression -> expression GE expression .)
    TO              reduce using rule 14 (expression -> expression GE expression .)
    RPAREN          reduce using rule 14 (expression -> expression GE expression .)
    COLON           reduce using rule 14 (expression -> expression GE expression .)
    LT              shift and go to state 27
    LE              shift and go to state 23
    GT              shift and go to state 28
    GE              shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24

  ! LT              [ reduce using rule 14 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 14 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 14 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 14 (expression -> expression GE expression .) ]
  ! PLUS            [ reduce using rule 14 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression GE expression .) ]


state 40

    (17) expression -> expression TIMES expression .
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    LT              reduce using rule 17 (expression -> expression TIMES expression .)
    LE              reduce using rule 17 (expression -> expression TIMES expression .)
    GT              reduce using rule 17 (expression -> expression TIMES expression .)
    GE              reduce using rule 17 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 17 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 17 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 17 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 17 (expression -> expression TIMES expression .)
    $end            reduce using rule 17 (expression -> expression TIMES expression .)
    )               reduce using rule 17 (expression -> expression TIMES expression .)
    TO              reduce using rule 17 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 17 (expression -> expression TIMES expression .)
    COLON           reduce using rule 17 (expression -> expression TIMES expression .)

  ! LT              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 23 ]
  ! GT              [ shift and go to state 28 ]
  ! GE              [ shift and go to state 25 ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 26 ]
  ! DIVIDE          [ shift and go to state 24 ]


state 41

    (11) expression -> expression LT expression .
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 11 (expression -> expression LT expression .)
    )               reduce using rule 11 (expression -> expression LT expression .)
    TO              reduce using rule 11 (expression -> expression LT expression .)
    RPAREN          reduce using rule 11 (expression -> expression LT expression .)
    COLON           reduce using rule 11 (expression -> expression LT expression .)
    LT              shift and go to state 27
    LE              shift and go to state 23
    GT              shift and go to state 28
    GE              shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24

  ! LT              [ reduce using rule 11 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 11 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 11 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 11 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 11 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 11 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> expression LT expression .) ]


state 42

    (13) expression -> expression GT expression .
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 13 (expression -> expression GT expression .)
    )               reduce using rule 13 (expression -> expression GT expression .)
    TO              reduce using rule 13 (expression -> expression GT expression .)
    RPAREN          reduce using rule 13 (expression -> expression GT expression .)
    COLON           reduce using rule 13 (expression -> expression GT expression .)
    LT              shift and go to state 27
    LE              shift and go to state 23
    GT              shift and go to state 28
    GE              shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24

  ! LT              [ reduce using rule 13 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 13 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 13 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 13 (expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 13 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 13 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression GT expression .) ]


state 43

    (15) expression -> expression PLUS expression .
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    LT              reduce using rule 15 (expression -> expression PLUS expression .)
    LE              reduce using rule 15 (expression -> expression PLUS expression .)
    GT              reduce using rule 15 (expression -> expression PLUS expression .)
    GE              reduce using rule 15 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 15 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 15 (expression -> expression PLUS expression .)
    $end            reduce using rule 15 (expression -> expression PLUS expression .)
    )               reduce using rule 15 (expression -> expression PLUS expression .)
    TO              reduce using rule 15 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 15 (expression -> expression PLUS expression .)
    COLON           reduce using rule 15 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24

  ! TIMES           [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! LT              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 23 ]
  ! GT              [ shift and go to state 28 ]
  ! GE              [ shift and go to state 25 ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]


state 44

    (16) expression -> expression MINUS expression .
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    LT              reduce using rule 16 (expression -> expression MINUS expression .)
    LE              reduce using rule 16 (expression -> expression MINUS expression .)
    GT              reduce using rule 16 (expression -> expression MINUS expression .)
    GE              reduce using rule 16 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 16 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 16 (expression -> expression MINUS expression .)
    $end            reduce using rule 16 (expression -> expression MINUS expression .)
    )               reduce using rule 16 (expression -> expression MINUS expression .)
    TO              reduce using rule 16 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 16 (expression -> expression MINUS expression .)
    COLON           reduce using rule 16 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24

  ! TIMES           [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! LT              [ shift and go to state 27 ]
  ! LE              [ shift and go to state 23 ]
  ! GT              [ shift and go to state 28 ]
  ! GE              [ shift and go to state 25 ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]


state 45

    (1) statement -> FOR expression TO expression . COLON
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    COLON           shift and go to state 47
    LT              shift and go to state 27
    LE              shift and go to state 23
    GT              shift and go to state 28
    GE              shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24


state 46

    (2) statement -> FOR ID IN expression . TO expression COLON
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    TO              shift and go to state 48
    LT              shift and go to state 27
    LE              shift and go to state 23
    GT              shift and go to state 28
    GE              shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24


state 47

    (1) statement -> FOR expression TO expression COLON .

    $end            reduce using rule 1 (statement -> FOR expression TO expression COLON .)


state 48

    (2) statement -> FOR ID IN expression TO . expression COLON
    (11) expression -> . expression LT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . - expression
    (20) expression -> . ( expression )
    (21) expression -> . FLOAT
    (22) expression -> . INTEGER
    (23) expression -> . ID

    -               shift and go to state 3
    (               shift and go to state 2
    FLOAT           shift and go to state 11
    INTEGER         shift and go to state 10
    ID              shift and go to state 14

    expression                     shift and go to state 49

state 49

    (2) statement -> FOR ID IN expression TO expression . COLON
    (11) expression -> expression . LT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    COLON           shift and go to state 50
    LT              shift and go to state 27
    LE              shift and go to state 23
    GT              shift and go to state 28
    GE              shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 24


state 50

    (2) statement -> FOR ID IN expression TO expression COLON .

    $end            reduce using rule 2 (statement -> FOR ID IN expression TO expression COLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LT in state 37 resolved as shift
WARNING: shift/reduce conflict for LE in state 37 resolved as shift
WARNING: shift/reduce conflict for GT in state 37 resolved as shift
WARNING: shift/reduce conflict for GE in state 37 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 37 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 37 resolved as shift
WARNING: shift/reduce conflict for LT in state 39 resolved as shift
WARNING: shift/reduce conflict for LE in state 39 resolved as shift
WARNING: shift/reduce conflict for GT in state 39 resolved as shift
WARNING: shift/reduce conflict for GE in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 39 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 39 resolved as shift
WARNING: shift/reduce conflict for LT in state 41 resolved as shift
WARNING: shift/reduce conflict for LE in state 41 resolved as shift
WARNING: shift/reduce conflict for GT in state 41 resolved as shift
WARNING: shift/reduce conflict for GE in state 41 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 41 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 41 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 41 resolved as shift
WARNING: shift/reduce conflict for LT in state 42 resolved as shift
WARNING: shift/reduce conflict for LE in state 42 resolved as shift
WARNING: shift/reduce conflict for GT in state 42 resolved as shift
WARNING: shift/reduce conflict for GE in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 42 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 42 resolved as shift
