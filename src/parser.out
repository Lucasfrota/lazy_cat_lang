Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    TRUE
    NONE
    NEWLINE
    SQUARED
    ELSE
    AND
    FALSE
    NOT
    OR
    QUOTATION

Grammar

Rule 0     S' -> statement
Rule 1     statement -> FUN ID LPAREN declaration_list RPAREN COLON
Rule 2     statement -> FUN ID COLON
Rule 3     statement -> FUN ID LPAREN RPAREN COLON
Rule 4     statement -> VAR ID RECEIVE ID LPAREN RPAREN
Rule 5     statement -> ID RECEIVE ID LPAREN RPAREN
Rule 6     expression -> ID LPAREN RPAREN
Rule 7     declaration_list -> expression
Rule 8     declaration_list -> declaration_list expression
Rule 9     statement -> FOR expression TO expression COLON
Rule 10    statement -> FOR ID IN expression TO expression COLON
Rule 11    statement -> ENDFOR
Rule 12    statement -> ENDFUN
Rule 13    statement -> RETURN STRING
Rule 14    statement -> RETURN expression
Rule 15    statement -> PRINT expression
Rule 16    statement -> PRINT STRING
Rule 17    statement -> IF expression COLON
Rule 18    statement -> ENDIF
Rule 19    statement -> VAR ID RECEIVE expression
Rule 20    statement -> VAR ID RECEIVE STRING
Rule 21    statement -> ID RECEIVE expression
Rule 22    statement -> ID RECEIVE STRING
Rule 23    statement -> expression
Rule 24    statement -> LPAREN expression RPAREN
Rule 25    expression -> expression LT expression
Rule 26    expression -> expression LE expression
Rule 27    expression -> expression GT expression
Rule 28    expression -> expression GE expression
Rule 29    expression -> expression PLUS expression
Rule 30    expression -> expression MINUS expression
Rule 31    expression -> expression TIMES expression
Rule 32    expression -> expression DIVIDE expression
Rule 33    expression -> - expression
Rule 34    expression -> ( expression )
Rule 35    expression -> FLOAT
Rule 36    expression -> INTEGER
Rule 37    expression -> expression COMMA
Rule 38    expression -> ID
Rule 39    statement -> <empty>

Terminals, with rules where they appear

(                    : 34
)                    : 34
-                    : 33
AND                  : 
COLON                : 1 2 3 9 10 17
COMMA                : 37
DIVIDE               : 32
ELSE                 : 
ENDFOR               : 11
ENDFUN               : 12
ENDIF                : 18
FALSE                : 
FLOAT                : 35
FOR                  : 9 10
FUN                  : 1 2 3
GE                   : 28
GT                   : 27
ID                   : 1 2 3 4 4 5 5 6 10 19 20 21 22 38
IF                   : 17
IN                   : 10
INTEGER              : 36
LE                   : 26
LPAREN               : 1 3 4 5 6 24
LT                   : 25
MINUS                : 30
NEWLINE              : 
NONE                 : 
NOT                  : 
OR                   : 
PLUS                 : 29
PRINT                : 15 16
QUOTATION            : 
RECEIVE              : 4 5 19 20 21 22
RETURN               : 13 14
RPAREN               : 1 3 4 5 6 24
SQUARED              : 
STRING               : 13 16 20 22
TIMES                : 31
TO                   : 9 10
TRUE                 : 
VAR                  : 4 19 20
error                : 

Nonterminals, with rules where they appear

declaration_list     : 1 8
expression           : 7 8 9 9 10 10 14 15 17 19 21 23 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 34 37
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . FUN ID LPAREN declaration_list RPAREN COLON
    (2) statement -> . FUN ID COLON
    (3) statement -> . FUN ID LPAREN RPAREN COLON
    (4) statement -> . VAR ID RECEIVE ID LPAREN RPAREN
    (5) statement -> . ID RECEIVE ID LPAREN RPAREN
    (9) statement -> . FOR expression TO expression COLON
    (10) statement -> . FOR ID IN expression TO expression COLON
    (11) statement -> . ENDFOR
    (12) statement -> . ENDFUN
    (13) statement -> . RETURN STRING
    (14) statement -> . RETURN expression
    (15) statement -> . PRINT expression
    (16) statement -> . PRINT STRING
    (17) statement -> . IF expression COLON
    (18) statement -> . ENDIF
    (19) statement -> . VAR ID RECEIVE expression
    (20) statement -> . VAR ID RECEIVE STRING
    (21) statement -> . ID RECEIVE expression
    (22) statement -> . ID RECEIVE STRING
    (23) statement -> . expression
    (24) statement -> . LPAREN expression RPAREN
    (39) statement -> .
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    FUN             shift and go to state 3
    VAR             shift and go to state 12
    ID              shift and go to state 13
    FOR             shift and go to state 9
    ENDFOR          shift and go to state 7
    ENDFUN          shift and go to state 2
    RETURN          shift and go to state 1
    PRINT           shift and go to state 4
    IF              shift and go to state 14
    ENDIF           shift and go to state 11
    LPAREN          shift and go to state 10
    $end            reduce using rule 39 (statement -> .)
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 17
    statement                      shift and go to state 8

state 1

    (13) statement -> RETURN . STRING
    (14) statement -> RETURN . expression
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    STRING          shift and go to state 18
    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 19

state 2

    (12) statement -> ENDFUN .

    $end            reduce using rule 12 (statement -> ENDFUN .)


state 3

    (1) statement -> FUN . ID LPAREN declaration_list RPAREN COLON
    (2) statement -> FUN . ID COLON
    (3) statement -> FUN . ID LPAREN RPAREN COLON

    ID              shift and go to state 21


state 4

    (15) statement -> PRINT . expression
    (16) statement -> PRINT . STRING
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    STRING          shift and go to state 22
    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 23

state 5

    (34) expression -> ( . expression )
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 24

state 6

    (33) expression -> - . expression
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 25

state 7

    (11) statement -> ENDFOR .

    $end            reduce using rule 11 (statement -> ENDFOR .)


state 8

    (0) S' -> statement .



state 9

    (9) statement -> FOR . expression TO expression COLON
    (10) statement -> FOR . ID IN expression TO expression COLON
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 26
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 27

state 10

    (24) statement -> LPAREN . expression RPAREN
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 28

state 11

    (18) statement -> ENDIF .

    $end            reduce using rule 18 (statement -> ENDIF .)


state 12

    (4) statement -> VAR . ID RECEIVE ID LPAREN RPAREN
    (19) statement -> VAR . ID RECEIVE expression
    (20) statement -> VAR . ID RECEIVE STRING

    ID              shift and go to state 29


state 13

    (5) statement -> ID . RECEIVE ID LPAREN RPAREN
    (21) statement -> ID . RECEIVE expression
    (22) statement -> ID . RECEIVE STRING
    (6) expression -> ID . LPAREN RPAREN
    (38) expression -> ID .

    RECEIVE         shift and go to state 30
    LPAREN          shift and go to state 31
    LT              reduce using rule 38 (expression -> ID .)
    LE              reduce using rule 38 (expression -> ID .)
    GT              reduce using rule 38 (expression -> ID .)
    GE              reduce using rule 38 (expression -> ID .)
    PLUS            reduce using rule 38 (expression -> ID .)
    MINUS           reduce using rule 38 (expression -> ID .)
    TIMES           reduce using rule 38 (expression -> ID .)
    DIVIDE          reduce using rule 38 (expression -> ID .)
    COMMA           reduce using rule 38 (expression -> ID .)
    $end            reduce using rule 38 (expression -> ID .)


state 14

    (17) statement -> IF . expression COLON
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 32

state 15

    (36) expression -> INTEGER .

    LT              reduce using rule 36 (expression -> INTEGER .)
    LE              reduce using rule 36 (expression -> INTEGER .)
    GT              reduce using rule 36 (expression -> INTEGER .)
    GE              reduce using rule 36 (expression -> INTEGER .)
    PLUS            reduce using rule 36 (expression -> INTEGER .)
    MINUS           reduce using rule 36 (expression -> INTEGER .)
    TIMES           reduce using rule 36 (expression -> INTEGER .)
    DIVIDE          reduce using rule 36 (expression -> INTEGER .)
    COMMA           reduce using rule 36 (expression -> INTEGER .)
    $end            reduce using rule 36 (expression -> INTEGER .)
    )               reduce using rule 36 (expression -> INTEGER .)
    TO              reduce using rule 36 (expression -> INTEGER .)
    RPAREN          reduce using rule 36 (expression -> INTEGER .)
    COLON           reduce using rule 36 (expression -> INTEGER .)
    ID              reduce using rule 36 (expression -> INTEGER .)
    -               reduce using rule 36 (expression -> INTEGER .)
    (               reduce using rule 36 (expression -> INTEGER .)
    FLOAT           reduce using rule 36 (expression -> INTEGER .)
    INTEGER         reduce using rule 36 (expression -> INTEGER .)


state 16

    (35) expression -> FLOAT .

    LT              reduce using rule 35 (expression -> FLOAT .)
    LE              reduce using rule 35 (expression -> FLOAT .)
    GT              reduce using rule 35 (expression -> FLOAT .)
    GE              reduce using rule 35 (expression -> FLOAT .)
    PLUS            reduce using rule 35 (expression -> FLOAT .)
    MINUS           reduce using rule 35 (expression -> FLOAT .)
    TIMES           reduce using rule 35 (expression -> FLOAT .)
    DIVIDE          reduce using rule 35 (expression -> FLOAT .)
    COMMA           reduce using rule 35 (expression -> FLOAT .)
    $end            reduce using rule 35 (expression -> FLOAT .)
    )               reduce using rule 35 (expression -> FLOAT .)
    TO              reduce using rule 35 (expression -> FLOAT .)
    RPAREN          reduce using rule 35 (expression -> FLOAT .)
    COLON           reduce using rule 35 (expression -> FLOAT .)
    ID              reduce using rule 35 (expression -> FLOAT .)
    -               reduce using rule 35 (expression -> FLOAT .)
    (               reduce using rule 35 (expression -> FLOAT .)
    FLOAT           reduce using rule 35 (expression -> FLOAT .)
    INTEGER         reduce using rule 35 (expression -> FLOAT .)


state 17

    (23) statement -> expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    $end            reduce using rule 23 (statement -> expression .)
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40


state 18

    (13) statement -> RETURN STRING .

    $end            reduce using rule 13 (statement -> RETURN STRING .)


state 19

    (14) statement -> RETURN expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    $end            reduce using rule 14 (statement -> RETURN expression .)
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40


state 20

    (6) expression -> ID . LPAREN RPAREN
    (38) expression -> ID .

    LPAREN          shift and go to state 31
    LT              reduce using rule 38 (expression -> ID .)
    LE              reduce using rule 38 (expression -> ID .)
    GT              reduce using rule 38 (expression -> ID .)
    GE              reduce using rule 38 (expression -> ID .)
    PLUS            reduce using rule 38 (expression -> ID .)
    MINUS           reduce using rule 38 (expression -> ID .)
    TIMES           reduce using rule 38 (expression -> ID .)
    DIVIDE          reduce using rule 38 (expression -> ID .)
    COMMA           reduce using rule 38 (expression -> ID .)
    $end            reduce using rule 38 (expression -> ID .)
    )               reduce using rule 38 (expression -> ID .)
    TO              reduce using rule 38 (expression -> ID .)
    RPAREN          reduce using rule 38 (expression -> ID .)
    COLON           reduce using rule 38 (expression -> ID .)
    ID              reduce using rule 38 (expression -> ID .)
    -               reduce using rule 38 (expression -> ID .)
    (               reduce using rule 38 (expression -> ID .)
    FLOAT           reduce using rule 38 (expression -> ID .)
    INTEGER         reduce using rule 38 (expression -> ID .)


state 21

    (1) statement -> FUN ID . LPAREN declaration_list RPAREN COLON
    (2) statement -> FUN ID . COLON
    (3) statement -> FUN ID . LPAREN RPAREN COLON

    LPAREN          shift and go to state 43
    COLON           shift and go to state 42


state 22

    (16) statement -> PRINT STRING .

    $end            reduce using rule 16 (statement -> PRINT STRING .)


state 23

    (15) statement -> PRINT expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    $end            reduce using rule 15 (statement -> PRINT expression .)
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40


state 24

    (34) expression -> ( expression . )
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    )               shift and go to state 44
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40


state 25

    (33) expression -> - expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    LT              reduce using rule 33 (expression -> - expression .)
    LE              reduce using rule 33 (expression -> - expression .)
    GT              reduce using rule 33 (expression -> - expression .)
    GE              reduce using rule 33 (expression -> - expression .)
    PLUS            reduce using rule 33 (expression -> - expression .)
    MINUS           reduce using rule 33 (expression -> - expression .)
    TIMES           reduce using rule 33 (expression -> - expression .)
    DIVIDE          reduce using rule 33 (expression -> - expression .)
    COMMA           reduce using rule 33 (expression -> - expression .)
    $end            reduce using rule 33 (expression -> - expression .)
    )               reduce using rule 33 (expression -> - expression .)
    TO              reduce using rule 33 (expression -> - expression .)
    RPAREN          reduce using rule 33 (expression -> - expression .)
    COLON           reduce using rule 33 (expression -> - expression .)
    ID              reduce using rule 33 (expression -> - expression .)
    -               reduce using rule 33 (expression -> - expression .)
    (               reduce using rule 33 (expression -> - expression .)
    FLOAT           reduce using rule 33 (expression -> - expression .)
    INTEGER         reduce using rule 33 (expression -> - expression .)

  ! LT              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 38 ]
  ! GE              [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 36 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! COMMA           [ shift and go to state 40 ]


state 26

    (10) statement -> FOR ID . IN expression TO expression COLON
    (6) expression -> ID . LPAREN RPAREN
    (38) expression -> ID .

    IN              shift and go to state 45
    LPAREN          shift and go to state 31
    TO              reduce using rule 38 (expression -> ID .)
    LT              reduce using rule 38 (expression -> ID .)
    LE              reduce using rule 38 (expression -> ID .)
    GT              reduce using rule 38 (expression -> ID .)
    GE              reduce using rule 38 (expression -> ID .)
    PLUS            reduce using rule 38 (expression -> ID .)
    MINUS           reduce using rule 38 (expression -> ID .)
    TIMES           reduce using rule 38 (expression -> ID .)
    DIVIDE          reduce using rule 38 (expression -> ID .)
    COMMA           reduce using rule 38 (expression -> ID .)


state 27

    (9) statement -> FOR expression . TO expression COLON
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    TO              shift and go to state 46
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40


state 28

    (24) statement -> LPAREN expression . RPAREN
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    RPAREN          shift and go to state 47
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40


state 29

    (4) statement -> VAR ID . RECEIVE ID LPAREN RPAREN
    (19) statement -> VAR ID . RECEIVE expression
    (20) statement -> VAR ID . RECEIVE STRING

    RECEIVE         shift and go to state 48


state 30

    (5) statement -> ID RECEIVE . ID LPAREN RPAREN
    (21) statement -> ID RECEIVE . expression
    (22) statement -> ID RECEIVE . STRING
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 51
    STRING          shift and go to state 49
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 50

state 31

    (6) expression -> ID LPAREN . RPAREN

    RPAREN          shift and go to state 52


state 32

    (17) statement -> IF expression . COLON
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    COLON           shift and go to state 53
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40


state 33

    (26) expression -> expression LE . expression
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 54

state 34

    (32) expression -> expression DIVIDE . expression
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 55

state 35

    (28) expression -> expression GE . expression
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 56

state 36

    (31) expression -> expression TIMES . expression
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 57

state 37

    (25) expression -> expression LT . expression
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 58

state 38

    (27) expression -> expression GT . expression
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 59

state 39

    (29) expression -> expression PLUS . expression
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 60

state 40

    (37) expression -> expression COMMA .

    LT              reduce using rule 37 (expression -> expression COMMA .)
    LE              reduce using rule 37 (expression -> expression COMMA .)
    GT              reduce using rule 37 (expression -> expression COMMA .)
    GE              reduce using rule 37 (expression -> expression COMMA .)
    PLUS            reduce using rule 37 (expression -> expression COMMA .)
    MINUS           reduce using rule 37 (expression -> expression COMMA .)
    TIMES           reduce using rule 37 (expression -> expression COMMA .)
    DIVIDE          reduce using rule 37 (expression -> expression COMMA .)
    COMMA           reduce using rule 37 (expression -> expression COMMA .)
    $end            reduce using rule 37 (expression -> expression COMMA .)
    )               reduce using rule 37 (expression -> expression COMMA .)
    TO              reduce using rule 37 (expression -> expression COMMA .)
    RPAREN          reduce using rule 37 (expression -> expression COMMA .)
    COLON           reduce using rule 37 (expression -> expression COMMA .)
    ID              reduce using rule 37 (expression -> expression COMMA .)
    -               reduce using rule 37 (expression -> expression COMMA .)
    (               reduce using rule 37 (expression -> expression COMMA .)
    FLOAT           reduce using rule 37 (expression -> expression COMMA .)
    INTEGER         reduce using rule 37 (expression -> expression COMMA .)


state 41

    (30) expression -> expression MINUS . expression
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 61

state 42

    (2) statement -> FUN ID COLON .

    $end            reduce using rule 2 (statement -> FUN ID COLON .)


state 43

    (1) statement -> FUN ID LPAREN . declaration_list RPAREN COLON
    (3) statement -> FUN ID LPAREN . RPAREN COLON
    (7) declaration_list -> . expression
    (8) declaration_list -> . declaration_list expression
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    RPAREN          shift and go to state 62
    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 64
    declaration_list               shift and go to state 63

state 44

    (34) expression -> ( expression ) .

    LT              reduce using rule 34 (expression -> ( expression ) .)
    LE              reduce using rule 34 (expression -> ( expression ) .)
    GT              reduce using rule 34 (expression -> ( expression ) .)
    GE              reduce using rule 34 (expression -> ( expression ) .)
    PLUS            reduce using rule 34 (expression -> ( expression ) .)
    MINUS           reduce using rule 34 (expression -> ( expression ) .)
    TIMES           reduce using rule 34 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 34 (expression -> ( expression ) .)
    COMMA           reduce using rule 34 (expression -> ( expression ) .)
    $end            reduce using rule 34 (expression -> ( expression ) .)
    )               reduce using rule 34 (expression -> ( expression ) .)
    TO              reduce using rule 34 (expression -> ( expression ) .)
    RPAREN          reduce using rule 34 (expression -> ( expression ) .)
    COLON           reduce using rule 34 (expression -> ( expression ) .)
    ID              reduce using rule 34 (expression -> ( expression ) .)
    -               reduce using rule 34 (expression -> ( expression ) .)
    (               reduce using rule 34 (expression -> ( expression ) .)
    FLOAT           reduce using rule 34 (expression -> ( expression ) .)
    INTEGER         reduce using rule 34 (expression -> ( expression ) .)


state 45

    (10) statement -> FOR ID IN . expression TO expression COLON
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 65

state 46

    (9) statement -> FOR expression TO . expression COLON
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 66

state 47

    (24) statement -> LPAREN expression RPAREN .

    $end            reduce using rule 24 (statement -> LPAREN expression RPAREN .)


state 48

    (4) statement -> VAR ID RECEIVE . ID LPAREN RPAREN
    (19) statement -> VAR ID RECEIVE . expression
    (20) statement -> VAR ID RECEIVE . STRING
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 69
    STRING          shift and go to state 67
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 68

state 49

    (22) statement -> ID RECEIVE STRING .

    $end            reduce using rule 22 (statement -> ID RECEIVE STRING .)


state 50

    (21) statement -> ID RECEIVE expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    $end            reduce using rule 21 (statement -> ID RECEIVE expression .)
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40


state 51

    (5) statement -> ID RECEIVE ID . LPAREN RPAREN
    (6) expression -> ID . LPAREN RPAREN
    (38) expression -> ID .

    LPAREN          shift and go to state 70
    LT              reduce using rule 38 (expression -> ID .)
    LE              reduce using rule 38 (expression -> ID .)
    GT              reduce using rule 38 (expression -> ID .)
    GE              reduce using rule 38 (expression -> ID .)
    PLUS            reduce using rule 38 (expression -> ID .)
    MINUS           reduce using rule 38 (expression -> ID .)
    TIMES           reduce using rule 38 (expression -> ID .)
    DIVIDE          reduce using rule 38 (expression -> ID .)
    COMMA           reduce using rule 38 (expression -> ID .)
    $end            reduce using rule 38 (expression -> ID .)


state 52

    (6) expression -> ID LPAREN RPAREN .

    LT              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    LE              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    GT              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    GE              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    $end            reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    )               reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    TO              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    COLON           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    ID              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    -               reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    (               reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    FLOAT           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    INTEGER         reduce using rule 6 (expression -> ID LPAREN RPAREN .)


state 53

    (17) statement -> IF expression COLON .

    $end            reduce using rule 17 (statement -> IF expression COLON .)


state 54

    (26) expression -> expression LE expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 26 (expression -> expression LE expression .)
    )               reduce using rule 26 (expression -> expression LE expression .)
    TO              reduce using rule 26 (expression -> expression LE expression .)
    RPAREN          reduce using rule 26 (expression -> expression LE expression .)
    COLON           reduce using rule 26 (expression -> expression LE expression .)
    ID              reduce using rule 26 (expression -> expression LE expression .)
    -               reduce using rule 26 (expression -> expression LE expression .)
    (               reduce using rule 26 (expression -> expression LE expression .)
    FLOAT           reduce using rule 26 (expression -> expression LE expression .)
    INTEGER         reduce using rule 26 (expression -> expression LE expression .)
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40

  ! LT              [ reduce using rule 26 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 26 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 26 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 26 (expression -> expression LE expression .) ]
  ! PLUS            [ reduce using rule 26 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression LE expression .) ]
  ! COMMA           [ reduce using rule 26 (expression -> expression LE expression .) ]


state 55

    (32) expression -> expression DIVIDE expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    LT              reduce using rule 32 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 32 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 32 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 32 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 32 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 32 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 32 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 32 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 32 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 32 (expression -> expression DIVIDE expression .)
    )               reduce using rule 32 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 32 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 32 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 32 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 32 (expression -> expression DIVIDE expression .)
    -               reduce using rule 32 (expression -> expression DIVIDE expression .)
    (               reduce using rule 32 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 32 (expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 32 (expression -> expression DIVIDE expression .)

  ! LT              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 38 ]
  ! GE              [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 36 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! COMMA           [ shift and go to state 40 ]


state 56

    (28) expression -> expression GE expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 28 (expression -> expression GE expression .)
    )               reduce using rule 28 (expression -> expression GE expression .)
    TO              reduce using rule 28 (expression -> expression GE expression .)
    RPAREN          reduce using rule 28 (expression -> expression GE expression .)
    COLON           reduce using rule 28 (expression -> expression GE expression .)
    ID              reduce using rule 28 (expression -> expression GE expression .)
    -               reduce using rule 28 (expression -> expression GE expression .)
    (               reduce using rule 28 (expression -> expression GE expression .)
    FLOAT           reduce using rule 28 (expression -> expression GE expression .)
    INTEGER         reduce using rule 28 (expression -> expression GE expression .)
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40

  ! LT              [ reduce using rule 28 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 28 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 28 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 28 (expression -> expression GE expression .) ]
  ! PLUS            [ reduce using rule 28 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression GE expression .) ]
  ! COMMA           [ reduce using rule 28 (expression -> expression GE expression .) ]


state 57

    (31) expression -> expression TIMES expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    LT              reduce using rule 31 (expression -> expression TIMES expression .)
    LE              reduce using rule 31 (expression -> expression TIMES expression .)
    GT              reduce using rule 31 (expression -> expression TIMES expression .)
    GE              reduce using rule 31 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 31 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 31 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 31 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 31 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 31 (expression -> expression TIMES expression .)
    $end            reduce using rule 31 (expression -> expression TIMES expression .)
    )               reduce using rule 31 (expression -> expression TIMES expression .)
    TO              reduce using rule 31 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 31 (expression -> expression TIMES expression .)
    COLON           reduce using rule 31 (expression -> expression TIMES expression .)
    ID              reduce using rule 31 (expression -> expression TIMES expression .)
    -               reduce using rule 31 (expression -> expression TIMES expression .)
    (               reduce using rule 31 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 31 (expression -> expression TIMES expression .)
    INTEGER         reduce using rule 31 (expression -> expression TIMES expression .)

  ! LT              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 38 ]
  ! GE              [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 36 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! COMMA           [ shift and go to state 40 ]


state 58

    (25) expression -> expression LT expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 25 (expression -> expression LT expression .)
    )               reduce using rule 25 (expression -> expression LT expression .)
    TO              reduce using rule 25 (expression -> expression LT expression .)
    RPAREN          reduce using rule 25 (expression -> expression LT expression .)
    COLON           reduce using rule 25 (expression -> expression LT expression .)
    ID              reduce using rule 25 (expression -> expression LT expression .)
    -               reduce using rule 25 (expression -> expression LT expression .)
    (               reduce using rule 25 (expression -> expression LT expression .)
    FLOAT           reduce using rule 25 (expression -> expression LT expression .)
    INTEGER         reduce using rule 25 (expression -> expression LT expression .)
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40

  ! LT              [ reduce using rule 25 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 25 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 25 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 25 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 25 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression LT expression .) ]
  ! COMMA           [ reduce using rule 25 (expression -> expression LT expression .) ]


state 59

    (27) expression -> expression GT expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 27 (expression -> expression GT expression .)
    )               reduce using rule 27 (expression -> expression GT expression .)
    TO              reduce using rule 27 (expression -> expression GT expression .)
    RPAREN          reduce using rule 27 (expression -> expression GT expression .)
    COLON           reduce using rule 27 (expression -> expression GT expression .)
    ID              reduce using rule 27 (expression -> expression GT expression .)
    -               reduce using rule 27 (expression -> expression GT expression .)
    (               reduce using rule 27 (expression -> expression GT expression .)
    FLOAT           reduce using rule 27 (expression -> expression GT expression .)
    INTEGER         reduce using rule 27 (expression -> expression GT expression .)
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40

  ! LT              [ reduce using rule 27 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 27 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 27 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 27 (expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 27 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression GT expression .) ]
  ! COMMA           [ reduce using rule 27 (expression -> expression GT expression .) ]


state 60

    (29) expression -> expression PLUS expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    LT              reduce using rule 29 (expression -> expression PLUS expression .)
    LE              reduce using rule 29 (expression -> expression PLUS expression .)
    GT              reduce using rule 29 (expression -> expression PLUS expression .)
    GE              reduce using rule 29 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 29 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 29 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 29 (expression -> expression PLUS expression .)
    $end            reduce using rule 29 (expression -> expression PLUS expression .)
    )               reduce using rule 29 (expression -> expression PLUS expression .)
    TO              reduce using rule 29 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 29 (expression -> expression PLUS expression .)
    COLON           reduce using rule 29 (expression -> expression PLUS expression .)
    ID              reduce using rule 29 (expression -> expression PLUS expression .)
    -               reduce using rule 29 (expression -> expression PLUS expression .)
    (               reduce using rule 29 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 29 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 29 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34

  ! TIMES           [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! LT              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 38 ]
  ! GE              [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 41 ]
  ! COMMA           [ shift and go to state 40 ]


state 61

    (30) expression -> expression MINUS expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    LT              reduce using rule 30 (expression -> expression MINUS expression .)
    LE              reduce using rule 30 (expression -> expression MINUS expression .)
    GT              reduce using rule 30 (expression -> expression MINUS expression .)
    GE              reduce using rule 30 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 30 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 30 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 30 (expression -> expression MINUS expression .)
    $end            reduce using rule 30 (expression -> expression MINUS expression .)
    )               reduce using rule 30 (expression -> expression MINUS expression .)
    TO              reduce using rule 30 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 30 (expression -> expression MINUS expression .)
    COLON           reduce using rule 30 (expression -> expression MINUS expression .)
    ID              reduce using rule 30 (expression -> expression MINUS expression .)
    -               reduce using rule 30 (expression -> expression MINUS expression .)
    (               reduce using rule 30 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 30 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 30 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34

  ! TIMES           [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! LT              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 38 ]
  ! GE              [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 41 ]
  ! COMMA           [ shift and go to state 40 ]


state 62

    (3) statement -> FUN ID LPAREN RPAREN . COLON

    COLON           shift and go to state 71


state 63

    (1) statement -> FUN ID LPAREN declaration_list . RPAREN COLON
    (8) declaration_list -> declaration_list . expression
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    RPAREN          shift and go to state 72
    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 73

state 64

    (7) declaration_list -> expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    RPAREN          reduce using rule 7 (declaration_list -> expression .)
    ID              reduce using rule 7 (declaration_list -> expression .)
    -               reduce using rule 7 (declaration_list -> expression .)
    (               reduce using rule 7 (declaration_list -> expression .)
    FLOAT           reduce using rule 7 (declaration_list -> expression .)
    INTEGER         reduce using rule 7 (declaration_list -> expression .)
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40


state 65

    (10) statement -> FOR ID IN expression . TO expression COLON
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    TO              shift and go to state 74
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40


state 66

    (9) statement -> FOR expression TO expression . COLON
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    COLON           shift and go to state 75
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40


state 67

    (20) statement -> VAR ID RECEIVE STRING .

    $end            reduce using rule 20 (statement -> VAR ID RECEIVE STRING .)


state 68

    (19) statement -> VAR ID RECEIVE expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    $end            reduce using rule 19 (statement -> VAR ID RECEIVE expression .)
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40


state 69

    (4) statement -> VAR ID RECEIVE ID . LPAREN RPAREN
    (6) expression -> ID . LPAREN RPAREN
    (38) expression -> ID .

    LPAREN          shift and go to state 76
    LT              reduce using rule 38 (expression -> ID .)
    LE              reduce using rule 38 (expression -> ID .)
    GT              reduce using rule 38 (expression -> ID .)
    GE              reduce using rule 38 (expression -> ID .)
    PLUS            reduce using rule 38 (expression -> ID .)
    MINUS           reduce using rule 38 (expression -> ID .)
    TIMES           reduce using rule 38 (expression -> ID .)
    DIVIDE          reduce using rule 38 (expression -> ID .)
    COMMA           reduce using rule 38 (expression -> ID .)
    $end            reduce using rule 38 (expression -> ID .)


state 70

    (5) statement -> ID RECEIVE ID LPAREN . RPAREN
    (6) expression -> ID LPAREN . RPAREN

    RPAREN          shift and go to state 77


state 71

    (3) statement -> FUN ID LPAREN RPAREN COLON .

    $end            reduce using rule 3 (statement -> FUN ID LPAREN RPAREN COLON .)


state 72

    (1) statement -> FUN ID LPAREN declaration_list RPAREN . COLON

    COLON           shift and go to state 78


state 73

    (8) declaration_list -> declaration_list expression .
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    RPAREN          reduce using rule 8 (declaration_list -> declaration_list expression .)
    ID              reduce using rule 8 (declaration_list -> declaration_list expression .)
    -               reduce using rule 8 (declaration_list -> declaration_list expression .)
    (               reduce using rule 8 (declaration_list -> declaration_list expression .)
    FLOAT           reduce using rule 8 (declaration_list -> declaration_list expression .)
    INTEGER         reduce using rule 8 (declaration_list -> declaration_list expression .)
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40


state 74

    (10) statement -> FOR ID IN expression TO . expression COLON
    (6) expression -> . ID LPAREN RPAREN
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . - expression
    (34) expression -> . ( expression )
    (35) expression -> . FLOAT
    (36) expression -> . INTEGER
    (37) expression -> . expression COMMA
    (38) expression -> . ID

    ID              shift and go to state 20
    -               shift and go to state 6
    (               shift and go to state 5
    FLOAT           shift and go to state 16
    INTEGER         shift and go to state 15

    expression                     shift and go to state 79

state 75

    (9) statement -> FOR expression TO expression COLON .

    $end            reduce using rule 9 (statement -> FOR expression TO expression COLON .)


state 76

    (4) statement -> VAR ID RECEIVE ID LPAREN . RPAREN
    (6) expression -> ID LPAREN . RPAREN

    RPAREN          shift and go to state 80


state 77

    (5) statement -> ID RECEIVE ID LPAREN RPAREN .
    (6) expression -> ID LPAREN RPAREN .

  ! reduce/reduce conflict for $end resolved using rule 5 (statement -> ID RECEIVE ID LPAREN RPAREN .)
    $end            reduce using rule 5 (statement -> ID RECEIVE ID LPAREN RPAREN .)
    LT              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    LE              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    GT              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    GE              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 6 (expression -> ID LPAREN RPAREN .)

  ! $end            [ reduce using rule 6 (expression -> ID LPAREN RPAREN .) ]


state 78

    (1) statement -> FUN ID LPAREN declaration_list RPAREN COLON .

    $end            reduce using rule 1 (statement -> FUN ID LPAREN declaration_list RPAREN COLON .)


state 79

    (10) statement -> FOR ID IN expression TO expression . COLON
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (37) expression -> expression . COMMA

    COLON           shift and go to state 81
    LT              shift and go to state 37
    LE              shift and go to state 33
    GT              shift and go to state 38
    GE              shift and go to state 35
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 34
    COMMA           shift and go to state 40


state 80

    (4) statement -> VAR ID RECEIVE ID LPAREN RPAREN .
    (6) expression -> ID LPAREN RPAREN .

  ! reduce/reduce conflict for $end resolved using rule 4 (statement -> VAR ID RECEIVE ID LPAREN RPAREN .)
    $end            reduce using rule 4 (statement -> VAR ID RECEIVE ID LPAREN RPAREN .)
    LT              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    LE              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    GT              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    GE              reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 6 (expression -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 6 (expression -> ID LPAREN RPAREN .)

  ! $end            [ reduce using rule 6 (expression -> ID LPAREN RPAREN .) ]


state 81

    (10) statement -> FOR ID IN expression TO expression COLON .

    $end            reduce using rule 10 (statement -> FOR ID IN expression TO expression COLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LT in state 54 resolved as shift
WARNING: shift/reduce conflict for LE in state 54 resolved as shift
WARNING: shift/reduce conflict for GT in state 54 resolved as shift
WARNING: shift/reduce conflict for GE in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 54 resolved as shift
WARNING: shift/reduce conflict for LT in state 56 resolved as shift
WARNING: shift/reduce conflict for LE in state 56 resolved as shift
WARNING: shift/reduce conflict for GT in state 56 resolved as shift
WARNING: shift/reduce conflict for GE in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 56 resolved as shift
WARNING: shift/reduce conflict for LT in state 58 resolved as shift
WARNING: shift/reduce conflict for LE in state 58 resolved as shift
WARNING: shift/reduce conflict for GT in state 58 resolved as shift
WARNING: shift/reduce conflict for GE in state 58 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 58 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 58 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 58 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 58 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 58 resolved as shift
WARNING: shift/reduce conflict for LT in state 59 resolved as shift
WARNING: shift/reduce conflict for LE in state 59 resolved as shift
WARNING: shift/reduce conflict for GT in state 59 resolved as shift
WARNING: shift/reduce conflict for GE in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 59 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 59 resolved as shift
WARNING: reduce/reduce conflict in state 77 resolved using rule (statement -> ID RECEIVE ID LPAREN RPAREN)
WARNING: rejected rule (expression -> ID LPAREN RPAREN) in state 77
WARNING: reduce/reduce conflict in state 80 resolved using rule (statement -> VAR ID RECEIVE ID LPAREN RPAREN)
WARNING: rejected rule (expression -> ID LPAREN RPAREN) in state 80
