Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    RETURN
    TRUE
    NONE
    NEWLINE
    SQUARED
    ELSE
    AND
    FALSE
    NOT
    OR
    QUOTATION

Grammar

Rule 0     S' -> statement
Rule 1     statement -> FUN ID LPAREN declaration_list RPAREN COLON
Rule 2     statement -> FUN ID COLON
Rule 3     statement -> FUN ID LPAREN RPAREN COLON
Rule 4     expression -> ID LPAREN RPAREN
Rule 5     declaration_list -> expression
Rule 6     declaration_list -> declaration_list expression
Rule 7     statement -> FOR expression TO expression COLON
Rule 8     statement -> FOR ID IN expression TO expression COLON
Rule 9     statement -> ENDFOR
Rule 10    statement -> ENDFUN
Rule 11    statement -> PRINT expression
Rule 12    statement -> PRINT STRING
Rule 13    statement -> IF expression COLON
Rule 14    statement -> ENDIF
Rule 15    statement -> ID RECEIVE expression
Rule 16    statement -> ID RECEIVE STRING
Rule 17    statement -> expression
Rule 18    statement -> LPAREN expression RPAREN
Rule 19    expression -> expression LT expression
Rule 20    expression -> expression LE expression
Rule 21    expression -> expression GT expression
Rule 22    expression -> expression GE expression
Rule 23    expression -> expression PLUS expression
Rule 24    expression -> expression MINUS expression
Rule 25    expression -> expression TIMES expression
Rule 26    expression -> expression DIVIDE expression
Rule 27    expression -> - expression
Rule 28    expression -> ( expression )
Rule 29    expression -> FLOAT
Rule 30    expression -> INTEGER
Rule 31    expression -> expression COMMA
Rule 32    expression -> ID
Rule 33    statement -> <empty>

Terminals, with rules where they appear

(                    : 28
)                    : 28
-                    : 27
AND                  : 
COLON                : 1 2 3 7 8 13
COMMA                : 31
DIVIDE               : 26
ELSE                 : 
ENDFOR               : 9
ENDFUN               : 10
ENDIF                : 14
FALSE                : 
FLOAT                : 29
FOR                  : 7 8
FUN                  : 1 2 3
GE                   : 22
GT                   : 21
ID                   : 1 2 3 4 8 15 16 32
IF                   : 13
IN                   : 8
INTEGER              : 30
LE                   : 20
LPAREN               : 1 3 4 18
LT                   : 19
MINUS                : 24
NEWLINE              : 
NONE                 : 
NOT                  : 
OR                   : 
PLUS                 : 23
PRINT                : 11 12
QUOTATION            : 
RECEIVE              : 15 16
RETURN               : 
RPAREN               : 1 3 4 18
SQUARED              : 
STRING               : 12 16
TIMES                : 25
TO                   : 7 8
TRUE                 : 
error                : 

Nonterminals, with rules where they appear

declaration_list     : 1 6
expression           : 5 6 7 7 8 8 11 13 15 17 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 28 31
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . FUN ID LPAREN declaration_list RPAREN COLON
    (2) statement -> . FUN ID COLON
    (3) statement -> . FUN ID LPAREN RPAREN COLON
    (7) statement -> . FOR expression TO expression COLON
    (8) statement -> . FOR ID IN expression TO expression COLON
    (9) statement -> . ENDFOR
    (10) statement -> . ENDFUN
    (11) statement -> . PRINT expression
    (12) statement -> . PRINT STRING
    (13) statement -> . IF expression COLON
    (14) statement -> . ENDIF
    (15) statement -> . ID RECEIVE expression
    (16) statement -> . ID RECEIVE STRING
    (17) statement -> . expression
    (18) statement -> . LPAREN expression RPAREN
    (33) statement -> .
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    FUN             shift and go to state 2
    FOR             shift and go to state 8
    ENDFOR          shift and go to state 6
    ENDFUN          shift and go to state 1
    PRINT           shift and go to state 3
    IF              shift and go to state 12
    ENDIF           shift and go to state 10
    ID              shift and go to state 11
    LPAREN          shift and go to state 9
    $end            reduce using rule 33 (statement -> .)
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 15
    statement                      shift and go to state 7

state 1

    (10) statement -> ENDFUN .

    $end            reduce using rule 10 (statement -> ENDFUN .)


state 2

    (1) statement -> FUN . ID LPAREN declaration_list RPAREN COLON
    (2) statement -> FUN . ID COLON
    (3) statement -> FUN . ID LPAREN RPAREN COLON

    ID              shift and go to state 16


state 3

    (11) statement -> PRINT . expression
    (12) statement -> PRINT . STRING
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    STRING          shift and go to state 17
    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 18

state 4

    (28) expression -> ( . expression )
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 20

state 5

    (27) expression -> - . expression
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 21

state 6

    (9) statement -> ENDFOR .

    $end            reduce using rule 9 (statement -> ENDFOR .)


state 7

    (0) S' -> statement .



state 8

    (7) statement -> FOR . expression TO expression COLON
    (8) statement -> FOR . ID IN expression TO expression COLON
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 22
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 23

state 9

    (18) statement -> LPAREN . expression RPAREN
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 24

state 10

    (14) statement -> ENDIF .

    $end            reduce using rule 14 (statement -> ENDIF .)


state 11

    (15) statement -> ID . RECEIVE expression
    (16) statement -> ID . RECEIVE STRING
    (4) expression -> ID . LPAREN RPAREN
    (32) expression -> ID .

    RECEIVE         shift and go to state 25
    LPAREN          shift and go to state 26
    LT              reduce using rule 32 (expression -> ID .)
    LE              reduce using rule 32 (expression -> ID .)
    GT              reduce using rule 32 (expression -> ID .)
    GE              reduce using rule 32 (expression -> ID .)
    PLUS            reduce using rule 32 (expression -> ID .)
    MINUS           reduce using rule 32 (expression -> ID .)
    TIMES           reduce using rule 32 (expression -> ID .)
    DIVIDE          reduce using rule 32 (expression -> ID .)
    COMMA           reduce using rule 32 (expression -> ID .)
    $end            reduce using rule 32 (expression -> ID .)


state 12

    (13) statement -> IF . expression COLON
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 27

state 13

    (30) expression -> INTEGER .

    LT              reduce using rule 30 (expression -> INTEGER .)
    LE              reduce using rule 30 (expression -> INTEGER .)
    GT              reduce using rule 30 (expression -> INTEGER .)
    GE              reduce using rule 30 (expression -> INTEGER .)
    PLUS            reduce using rule 30 (expression -> INTEGER .)
    MINUS           reduce using rule 30 (expression -> INTEGER .)
    TIMES           reduce using rule 30 (expression -> INTEGER .)
    DIVIDE          reduce using rule 30 (expression -> INTEGER .)
    COMMA           reduce using rule 30 (expression -> INTEGER .)
    $end            reduce using rule 30 (expression -> INTEGER .)
    )               reduce using rule 30 (expression -> INTEGER .)
    TO              reduce using rule 30 (expression -> INTEGER .)
    RPAREN          reduce using rule 30 (expression -> INTEGER .)
    COLON           reduce using rule 30 (expression -> INTEGER .)
    ID              reduce using rule 30 (expression -> INTEGER .)
    -               reduce using rule 30 (expression -> INTEGER .)
    (               reduce using rule 30 (expression -> INTEGER .)
    FLOAT           reduce using rule 30 (expression -> INTEGER .)
    INTEGER         reduce using rule 30 (expression -> INTEGER .)


state 14

    (29) expression -> FLOAT .

    LT              reduce using rule 29 (expression -> FLOAT .)
    LE              reduce using rule 29 (expression -> FLOAT .)
    GT              reduce using rule 29 (expression -> FLOAT .)
    GE              reduce using rule 29 (expression -> FLOAT .)
    PLUS            reduce using rule 29 (expression -> FLOAT .)
    MINUS           reduce using rule 29 (expression -> FLOAT .)
    TIMES           reduce using rule 29 (expression -> FLOAT .)
    DIVIDE          reduce using rule 29 (expression -> FLOAT .)
    COMMA           reduce using rule 29 (expression -> FLOAT .)
    $end            reduce using rule 29 (expression -> FLOAT .)
    )               reduce using rule 29 (expression -> FLOAT .)
    TO              reduce using rule 29 (expression -> FLOAT .)
    RPAREN          reduce using rule 29 (expression -> FLOAT .)
    COLON           reduce using rule 29 (expression -> FLOAT .)
    ID              reduce using rule 29 (expression -> FLOAT .)
    -               reduce using rule 29 (expression -> FLOAT .)
    (               reduce using rule 29 (expression -> FLOAT .)
    FLOAT           reduce using rule 29 (expression -> FLOAT .)
    INTEGER         reduce using rule 29 (expression -> FLOAT .)


state 15

    (17) statement -> expression .
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    $end            reduce using rule 17 (statement -> expression .)
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35


state 16

    (1) statement -> FUN ID . LPAREN declaration_list RPAREN COLON
    (2) statement -> FUN ID . COLON
    (3) statement -> FUN ID . LPAREN RPAREN COLON

    LPAREN          shift and go to state 38
    COLON           shift and go to state 37


state 17

    (12) statement -> PRINT STRING .

    $end            reduce using rule 12 (statement -> PRINT STRING .)


state 18

    (11) statement -> PRINT expression .
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    $end            reduce using rule 11 (statement -> PRINT expression .)
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35


state 19

    (4) expression -> ID . LPAREN RPAREN
    (32) expression -> ID .

    LPAREN          shift and go to state 26
    LT              reduce using rule 32 (expression -> ID .)
    LE              reduce using rule 32 (expression -> ID .)
    GT              reduce using rule 32 (expression -> ID .)
    GE              reduce using rule 32 (expression -> ID .)
    PLUS            reduce using rule 32 (expression -> ID .)
    MINUS           reduce using rule 32 (expression -> ID .)
    TIMES           reduce using rule 32 (expression -> ID .)
    DIVIDE          reduce using rule 32 (expression -> ID .)
    COMMA           reduce using rule 32 (expression -> ID .)
    $end            reduce using rule 32 (expression -> ID .)
    )               reduce using rule 32 (expression -> ID .)
    TO              reduce using rule 32 (expression -> ID .)
    RPAREN          reduce using rule 32 (expression -> ID .)
    COLON           reduce using rule 32 (expression -> ID .)
    ID              reduce using rule 32 (expression -> ID .)
    -               reduce using rule 32 (expression -> ID .)
    (               reduce using rule 32 (expression -> ID .)
    FLOAT           reduce using rule 32 (expression -> ID .)
    INTEGER         reduce using rule 32 (expression -> ID .)


state 20

    (28) expression -> ( expression . )
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    )               shift and go to state 39
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35


state 21

    (27) expression -> - expression .
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    LT              reduce using rule 27 (expression -> - expression .)
    LE              reduce using rule 27 (expression -> - expression .)
    GT              reduce using rule 27 (expression -> - expression .)
    GE              reduce using rule 27 (expression -> - expression .)
    PLUS            reduce using rule 27 (expression -> - expression .)
    MINUS           reduce using rule 27 (expression -> - expression .)
    TIMES           reduce using rule 27 (expression -> - expression .)
    DIVIDE          reduce using rule 27 (expression -> - expression .)
    COMMA           reduce using rule 27 (expression -> - expression .)
    $end            reduce using rule 27 (expression -> - expression .)
    )               reduce using rule 27 (expression -> - expression .)
    TO              reduce using rule 27 (expression -> - expression .)
    RPAREN          reduce using rule 27 (expression -> - expression .)
    COLON           reduce using rule 27 (expression -> - expression .)
    ID              reduce using rule 27 (expression -> - expression .)
    -               reduce using rule 27 (expression -> - expression .)
    (               reduce using rule 27 (expression -> - expression .)
    FLOAT           reduce using rule 27 (expression -> - expression .)
    INTEGER         reduce using rule 27 (expression -> - expression .)

  ! LT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 28 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! COMMA           [ shift and go to state 35 ]


state 22

    (8) statement -> FOR ID . IN expression TO expression COLON
    (4) expression -> ID . LPAREN RPAREN
    (32) expression -> ID .

    IN              shift and go to state 40
    LPAREN          shift and go to state 26
    TO              reduce using rule 32 (expression -> ID .)
    LT              reduce using rule 32 (expression -> ID .)
    LE              reduce using rule 32 (expression -> ID .)
    GT              reduce using rule 32 (expression -> ID .)
    GE              reduce using rule 32 (expression -> ID .)
    PLUS            reduce using rule 32 (expression -> ID .)
    MINUS           reduce using rule 32 (expression -> ID .)
    TIMES           reduce using rule 32 (expression -> ID .)
    DIVIDE          reduce using rule 32 (expression -> ID .)
    COMMA           reduce using rule 32 (expression -> ID .)


state 23

    (7) statement -> FOR expression . TO expression COLON
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    TO              shift and go to state 41
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35


state 24

    (18) statement -> LPAREN expression . RPAREN
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    RPAREN          shift and go to state 42
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35


state 25

    (15) statement -> ID RECEIVE . expression
    (16) statement -> ID RECEIVE . STRING
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    STRING          shift and go to state 43
    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 44

state 26

    (4) expression -> ID LPAREN . RPAREN

    RPAREN          shift and go to state 45


state 27

    (13) statement -> IF expression . COLON
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    COLON           shift and go to state 46
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35


state 28

    (20) expression -> expression LE . expression
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 47

state 29

    (26) expression -> expression DIVIDE . expression
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 48

state 30

    (22) expression -> expression GE . expression
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 49

state 31

    (25) expression -> expression TIMES . expression
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 50

state 32

    (19) expression -> expression LT . expression
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 51

state 33

    (21) expression -> expression GT . expression
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 52

state 34

    (23) expression -> expression PLUS . expression
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 53

state 35

    (31) expression -> expression COMMA .

    LT              reduce using rule 31 (expression -> expression COMMA .)
    LE              reduce using rule 31 (expression -> expression COMMA .)
    GT              reduce using rule 31 (expression -> expression COMMA .)
    GE              reduce using rule 31 (expression -> expression COMMA .)
    PLUS            reduce using rule 31 (expression -> expression COMMA .)
    MINUS           reduce using rule 31 (expression -> expression COMMA .)
    TIMES           reduce using rule 31 (expression -> expression COMMA .)
    DIVIDE          reduce using rule 31 (expression -> expression COMMA .)
    COMMA           reduce using rule 31 (expression -> expression COMMA .)
    $end            reduce using rule 31 (expression -> expression COMMA .)
    )               reduce using rule 31 (expression -> expression COMMA .)
    TO              reduce using rule 31 (expression -> expression COMMA .)
    RPAREN          reduce using rule 31 (expression -> expression COMMA .)
    COLON           reduce using rule 31 (expression -> expression COMMA .)
    ID              reduce using rule 31 (expression -> expression COMMA .)
    -               reduce using rule 31 (expression -> expression COMMA .)
    (               reduce using rule 31 (expression -> expression COMMA .)
    FLOAT           reduce using rule 31 (expression -> expression COMMA .)
    INTEGER         reduce using rule 31 (expression -> expression COMMA .)


state 36

    (24) expression -> expression MINUS . expression
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 54

state 37

    (2) statement -> FUN ID COLON .

    $end            reduce using rule 2 (statement -> FUN ID COLON .)


state 38

    (1) statement -> FUN ID LPAREN . declaration_list RPAREN COLON
    (3) statement -> FUN ID LPAREN . RPAREN COLON
    (5) declaration_list -> . expression
    (6) declaration_list -> . declaration_list expression
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    RPAREN          shift and go to state 55
    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 57
    declaration_list               shift and go to state 56

state 39

    (28) expression -> ( expression ) .

    LT              reduce using rule 28 (expression -> ( expression ) .)
    LE              reduce using rule 28 (expression -> ( expression ) .)
    GT              reduce using rule 28 (expression -> ( expression ) .)
    GE              reduce using rule 28 (expression -> ( expression ) .)
    PLUS            reduce using rule 28 (expression -> ( expression ) .)
    MINUS           reduce using rule 28 (expression -> ( expression ) .)
    TIMES           reduce using rule 28 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 28 (expression -> ( expression ) .)
    COMMA           reduce using rule 28 (expression -> ( expression ) .)
    $end            reduce using rule 28 (expression -> ( expression ) .)
    )               reduce using rule 28 (expression -> ( expression ) .)
    TO              reduce using rule 28 (expression -> ( expression ) .)
    RPAREN          reduce using rule 28 (expression -> ( expression ) .)
    COLON           reduce using rule 28 (expression -> ( expression ) .)
    ID              reduce using rule 28 (expression -> ( expression ) .)
    -               reduce using rule 28 (expression -> ( expression ) .)
    (               reduce using rule 28 (expression -> ( expression ) .)
    FLOAT           reduce using rule 28 (expression -> ( expression ) .)
    INTEGER         reduce using rule 28 (expression -> ( expression ) .)


state 40

    (8) statement -> FOR ID IN . expression TO expression COLON
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 58

state 41

    (7) statement -> FOR expression TO . expression COLON
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 59

state 42

    (18) statement -> LPAREN expression RPAREN .

    $end            reduce using rule 18 (statement -> LPAREN expression RPAREN .)


state 43

    (16) statement -> ID RECEIVE STRING .

    $end            reduce using rule 16 (statement -> ID RECEIVE STRING .)


state 44

    (15) statement -> ID RECEIVE expression .
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    $end            reduce using rule 15 (statement -> ID RECEIVE expression .)
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35


state 45

    (4) expression -> ID LPAREN RPAREN .

    LT              reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    LE              reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    GT              reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    GE              reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    $end            reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    )               reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    TO              reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    COLON           reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    ID              reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    -               reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    (               reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    FLOAT           reduce using rule 4 (expression -> ID LPAREN RPAREN .)
    INTEGER         reduce using rule 4 (expression -> ID LPAREN RPAREN .)


state 46

    (13) statement -> IF expression COLON .

    $end            reduce using rule 13 (statement -> IF expression COLON .)


state 47

    (20) expression -> expression LE expression .
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 20 (expression -> expression LE expression .)
    )               reduce using rule 20 (expression -> expression LE expression .)
    TO              reduce using rule 20 (expression -> expression LE expression .)
    RPAREN          reduce using rule 20 (expression -> expression LE expression .)
    COLON           reduce using rule 20 (expression -> expression LE expression .)
    ID              reduce using rule 20 (expression -> expression LE expression .)
    -               reduce using rule 20 (expression -> expression LE expression .)
    (               reduce using rule 20 (expression -> expression LE expression .)
    FLOAT           reduce using rule 20 (expression -> expression LE expression .)
    INTEGER         reduce using rule 20 (expression -> expression LE expression .)
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35

  ! LT              [ reduce using rule 20 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 20 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 20 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 20 (expression -> expression LE expression .) ]
  ! PLUS            [ reduce using rule 20 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression LE expression .) ]
  ! COMMA           [ reduce using rule 20 (expression -> expression LE expression .) ]


state 48

    (26) expression -> expression DIVIDE expression .
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    LT              reduce using rule 26 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 26 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 26 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 26 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 26 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 26 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 26 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 26 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 26 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 26 (expression -> expression DIVIDE expression .)
    )               reduce using rule 26 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 26 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 26 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 26 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 26 (expression -> expression DIVIDE expression .)
    -               reduce using rule 26 (expression -> expression DIVIDE expression .)
    (               reduce using rule 26 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 26 (expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 26 (expression -> expression DIVIDE expression .)

  ! LT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 28 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! COMMA           [ shift and go to state 35 ]


state 49

    (22) expression -> expression GE expression .
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 22 (expression -> expression GE expression .)
    )               reduce using rule 22 (expression -> expression GE expression .)
    TO              reduce using rule 22 (expression -> expression GE expression .)
    RPAREN          reduce using rule 22 (expression -> expression GE expression .)
    COLON           reduce using rule 22 (expression -> expression GE expression .)
    ID              reduce using rule 22 (expression -> expression GE expression .)
    -               reduce using rule 22 (expression -> expression GE expression .)
    (               reduce using rule 22 (expression -> expression GE expression .)
    FLOAT           reduce using rule 22 (expression -> expression GE expression .)
    INTEGER         reduce using rule 22 (expression -> expression GE expression .)
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35

  ! LT              [ reduce using rule 22 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 22 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 22 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 22 (expression -> expression GE expression .) ]
  ! PLUS            [ reduce using rule 22 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression GE expression .) ]
  ! COMMA           [ reduce using rule 22 (expression -> expression GE expression .) ]


state 50

    (25) expression -> expression TIMES expression .
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    LT              reduce using rule 25 (expression -> expression TIMES expression .)
    LE              reduce using rule 25 (expression -> expression TIMES expression .)
    GT              reduce using rule 25 (expression -> expression TIMES expression .)
    GE              reduce using rule 25 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 25 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 25 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 25 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 25 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 25 (expression -> expression TIMES expression .)
    $end            reduce using rule 25 (expression -> expression TIMES expression .)
    )               reduce using rule 25 (expression -> expression TIMES expression .)
    TO              reduce using rule 25 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 25 (expression -> expression TIMES expression .)
    COLON           reduce using rule 25 (expression -> expression TIMES expression .)
    ID              reduce using rule 25 (expression -> expression TIMES expression .)
    -               reduce using rule 25 (expression -> expression TIMES expression .)
    (               reduce using rule 25 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 25 (expression -> expression TIMES expression .)
    INTEGER         reduce using rule 25 (expression -> expression TIMES expression .)

  ! LT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 28 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! COMMA           [ shift and go to state 35 ]


state 51

    (19) expression -> expression LT expression .
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 19 (expression -> expression LT expression .)
    )               reduce using rule 19 (expression -> expression LT expression .)
    TO              reduce using rule 19 (expression -> expression LT expression .)
    RPAREN          reduce using rule 19 (expression -> expression LT expression .)
    COLON           reduce using rule 19 (expression -> expression LT expression .)
    ID              reduce using rule 19 (expression -> expression LT expression .)
    -               reduce using rule 19 (expression -> expression LT expression .)
    (               reduce using rule 19 (expression -> expression LT expression .)
    FLOAT           reduce using rule 19 (expression -> expression LT expression .)
    INTEGER         reduce using rule 19 (expression -> expression LT expression .)
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35

  ! LT              [ reduce using rule 19 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 19 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 19 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 19 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 19 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression LT expression .) ]
  ! COMMA           [ reduce using rule 19 (expression -> expression LT expression .) ]


state 52

    (21) expression -> expression GT expression .
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 21 (expression -> expression GT expression .)
    )               reduce using rule 21 (expression -> expression GT expression .)
    TO              reduce using rule 21 (expression -> expression GT expression .)
    RPAREN          reduce using rule 21 (expression -> expression GT expression .)
    COLON           reduce using rule 21 (expression -> expression GT expression .)
    ID              reduce using rule 21 (expression -> expression GT expression .)
    -               reduce using rule 21 (expression -> expression GT expression .)
    (               reduce using rule 21 (expression -> expression GT expression .)
    FLOAT           reduce using rule 21 (expression -> expression GT expression .)
    INTEGER         reduce using rule 21 (expression -> expression GT expression .)
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35

  ! LT              [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression GT expression .) ]
  ! COMMA           [ reduce using rule 21 (expression -> expression GT expression .) ]


state 53

    (23) expression -> expression PLUS expression .
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    LT              reduce using rule 23 (expression -> expression PLUS expression .)
    LE              reduce using rule 23 (expression -> expression PLUS expression .)
    GT              reduce using rule 23 (expression -> expression PLUS expression .)
    GE              reduce using rule 23 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 23 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 23 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 23 (expression -> expression PLUS expression .)
    $end            reduce using rule 23 (expression -> expression PLUS expression .)
    )               reduce using rule 23 (expression -> expression PLUS expression .)
    TO              reduce using rule 23 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 23 (expression -> expression PLUS expression .)
    COLON           reduce using rule 23 (expression -> expression PLUS expression .)
    ID              reduce using rule 23 (expression -> expression PLUS expression .)
    -               reduce using rule 23 (expression -> expression PLUS expression .)
    (               reduce using rule 23 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 23 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 23 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! LT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 28 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 36 ]
  ! COMMA           [ shift and go to state 35 ]


state 54

    (24) expression -> expression MINUS expression .
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    LT              reduce using rule 24 (expression -> expression MINUS expression .)
    LE              reduce using rule 24 (expression -> expression MINUS expression .)
    GT              reduce using rule 24 (expression -> expression MINUS expression .)
    GE              reduce using rule 24 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 24 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 24 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 24 (expression -> expression MINUS expression .)
    $end            reduce using rule 24 (expression -> expression MINUS expression .)
    )               reduce using rule 24 (expression -> expression MINUS expression .)
    TO              reduce using rule 24 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 24 (expression -> expression MINUS expression .)
    COLON           reduce using rule 24 (expression -> expression MINUS expression .)
    ID              reduce using rule 24 (expression -> expression MINUS expression .)
    -               reduce using rule 24 (expression -> expression MINUS expression .)
    (               reduce using rule 24 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 24 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 24 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! LT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 28 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 36 ]
  ! COMMA           [ shift and go to state 35 ]


state 55

    (3) statement -> FUN ID LPAREN RPAREN . COLON

    COLON           shift and go to state 60


state 56

    (1) statement -> FUN ID LPAREN declaration_list . RPAREN COLON
    (6) declaration_list -> declaration_list . expression
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    RPAREN          shift and go to state 61
    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 62

state 57

    (5) declaration_list -> expression .
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    RPAREN          reduce using rule 5 (declaration_list -> expression .)
    ID              reduce using rule 5 (declaration_list -> expression .)
    -               reduce using rule 5 (declaration_list -> expression .)
    (               reduce using rule 5 (declaration_list -> expression .)
    FLOAT           reduce using rule 5 (declaration_list -> expression .)
    INTEGER         reduce using rule 5 (declaration_list -> expression .)
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35


state 58

    (8) statement -> FOR ID IN expression . TO expression COLON
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    TO              shift and go to state 63
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35


state 59

    (7) statement -> FOR expression TO expression . COLON
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    COLON           shift and go to state 64
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35


state 60

    (3) statement -> FUN ID LPAREN RPAREN COLON .

    $end            reduce using rule 3 (statement -> FUN ID LPAREN RPAREN COLON .)


state 61

    (1) statement -> FUN ID LPAREN declaration_list RPAREN . COLON

    COLON           shift and go to state 65


state 62

    (6) declaration_list -> declaration_list expression .
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    RPAREN          reduce using rule 6 (declaration_list -> declaration_list expression .)
    ID              reduce using rule 6 (declaration_list -> declaration_list expression .)
    -               reduce using rule 6 (declaration_list -> declaration_list expression .)
    (               reduce using rule 6 (declaration_list -> declaration_list expression .)
    FLOAT           reduce using rule 6 (declaration_list -> declaration_list expression .)
    INTEGER         reduce using rule 6 (declaration_list -> declaration_list expression .)
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35


state 63

    (8) statement -> FOR ID IN expression TO . expression COLON
    (4) expression -> . ID LPAREN RPAREN
    (19) expression -> . expression LT expression
    (20) expression -> . expression LE expression
    (21) expression -> . expression GT expression
    (22) expression -> . expression GE expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . - expression
    (28) expression -> . ( expression )
    (29) expression -> . FLOAT
    (30) expression -> . INTEGER
    (31) expression -> . expression COMMA
    (32) expression -> . ID

    ID              shift and go to state 19
    -               shift and go to state 5
    (               shift and go to state 4
    FLOAT           shift and go to state 14
    INTEGER         shift and go to state 13

    expression                     shift and go to state 66

state 64

    (7) statement -> FOR expression TO expression COLON .

    $end            reduce using rule 7 (statement -> FOR expression TO expression COLON .)


state 65

    (1) statement -> FUN ID LPAREN declaration_list RPAREN COLON .

    $end            reduce using rule 1 (statement -> FUN ID LPAREN declaration_list RPAREN COLON .)


state 66

    (8) statement -> FOR ID IN expression TO expression . COLON
    (19) expression -> expression . LT expression
    (20) expression -> expression . LE expression
    (21) expression -> expression . GT expression
    (22) expression -> expression . GE expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (31) expression -> expression . COMMA

    COLON           shift and go to state 67
    LT              shift and go to state 32
    LE              shift and go to state 28
    GT              shift and go to state 33
    GE              shift and go to state 30
    PLUS            shift and go to state 34
    MINUS           shift and go to state 36
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 29
    COMMA           shift and go to state 35


state 67

    (8) statement -> FOR ID IN expression TO expression COLON .

    $end            reduce using rule 8 (statement -> FOR ID IN expression TO expression COLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LT in state 47 resolved as shift
WARNING: shift/reduce conflict for LE in state 47 resolved as shift
WARNING: shift/reduce conflict for GT in state 47 resolved as shift
WARNING: shift/reduce conflict for GE in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 47 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 47 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 47 resolved as shift
WARNING: shift/reduce conflict for LT in state 49 resolved as shift
WARNING: shift/reduce conflict for LE in state 49 resolved as shift
WARNING: shift/reduce conflict for GT in state 49 resolved as shift
WARNING: shift/reduce conflict for GE in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 49 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 49 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 49 resolved as shift
WARNING: shift/reduce conflict for LT in state 51 resolved as shift
WARNING: shift/reduce conflict for LE in state 51 resolved as shift
WARNING: shift/reduce conflict for GT in state 51 resolved as shift
WARNING: shift/reduce conflict for GE in state 51 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 51 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 51 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 51 resolved as shift
WARNING: shift/reduce conflict for LT in state 52 resolved as shift
WARNING: shift/reduce conflict for LE in state 52 resolved as shift
WARNING: shift/reduce conflict for GT in state 52 resolved as shift
WARNING: shift/reduce conflict for GE in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 52 resolved as shift
